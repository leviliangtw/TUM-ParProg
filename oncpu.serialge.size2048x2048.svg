<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >On-CPU Time Flame Graph: $ ./serialge ./ge_data/size2048x2048</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>irq_exit_rcu (3 samples, 0.02%)</title><rect x="1187.8" y="341" width="0.2" height="15.0" fill="rgb(223,99,53)" rx="2" ry="2" />
<text  x="1190.82" y="351.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_float (47 samples, 0.26%)</title><rect x="1155.6" y="293" width="3.1" height="15.0" fill="rgb(221,200,8)" rx="2" ry="2" />
<text  x="1158.57" y="303.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.01%)</title><rect x="1187.9" y="117" width="0.1" height="15.0" fill="rgb(225,220,3)" rx="2" ry="2" />
<text  x="1190.89" y="127.5" ></text>
</g>
<g >
<title>ksys_write (6 samples, 0.03%)</title><rect x="28.6" y="309" width="0.4" height="15.0" fill="rgb(235,170,7)" rx="2" ry="2" />
<text  x="31.60" y="319.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_float (196 samples, 1.10%)</title><rect x="1175.1" y="389" width="12.9" height="15.0" fill="rgb(218,112,39)" rx="2" ry="2" />
<text  x="1178.09" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="1145.3" y="213" width="0.1" height="15.0" fill="rgb(245,141,33)" rx="2" ry="2" />
<text  x="1148.28" y="223.5" ></text>
</g>
<g >
<title>queue_work_on (2 samples, 0.01%)</title><rect x="28.8" y="165" width="0.1" height="15.0" fill="rgb(208,164,47)" rx="2" ry="2" />
<text  x="31.80" y="175.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (97 samples, 0.54%)</title><rect x="1139.0" y="293" width="6.4" height="15.0" fill="rgb(229,4,40)" rx="2" ry="2" />
<text  x="1142.02" y="303.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;double&gt; (430 samples, 2.40%)</title><rect x="1136.0" y="309" width="28.4" height="15.0" fill="rgb(221,154,18)" rx="2" ry="2" />
<text  x="1139.05" y="319.5" >st..</text>
</g>
<g >
<title>copy_user_generic_string (8 samples, 0.04%)</title><rect x="43.1" y="197" width="0.5" height="15.0" fill="rgb(212,89,23)" rx="2" ry="2" />
<text  x="46.11" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="41.7" y="325" width="0.1" height="15.0" fill="rgb(252,211,50)" rx="2" ry="2" />
<text  x="44.66" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (4 samples, 0.02%)</title><rect x="1167.9" y="309" width="0.3" height="15.0" fill="rgb(240,100,46)" rx="2" ry="2" />
<text  x="1170.91" y="319.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (72 samples, 0.40%)</title><rect x="1158.7" y="293" width="4.7" height="15.0" fill="rgb(206,214,22)" rx="2" ry="2" />
<text  x="1161.67" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.01%)</title><rect x="62.9" y="277" width="0.1" height="15.0" fill="rgb(210,194,20)" rx="2" ry="2" />
<text  x="65.90" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="41.7" y="309" width="0.1" height="15.0" fill="rgb(231,194,6)" rx="2" ry="2" />
<text  x="44.66" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8 samples, 0.04%)</title><rect x="28.1" y="309" width="0.5" height="15.0" fill="rgb(222,85,42)" rx="2" ry="2" />
<text  x="31.07" y="319.5" ></text>
</g>
<g >
<title>trigger_load_balance (4 samples, 0.02%)</title><rect x="1131.7" y="181" width="0.3" height="15.0" fill="rgb(232,170,32)" rx="2" ry="2" />
<text  x="1134.70" y="191.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (2 samples, 0.01%)</title><rect x="63.0" y="293" width="0.2" height="15.0" fill="rgb(239,202,48)" rx="2" ry="2" />
<text  x="66.03" y="303.5" ></text>
</g>
<g >
<title>irq_work_run_list (4 samples, 0.02%)</title><rect x="1132.8" y="165" width="0.3" height="15.0" fill="rgb(227,197,6)" rx="2" ry="2" />
<text  x="1135.82" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="77.1" y="373" width="0.2" height="15.0" fill="rgb(252,225,30)" rx="2" ry="2" />
<text  x="80.14" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (56 samples, 0.31%)</title><rect x="1129.5" y="309" width="3.7" height="15.0" fill="rgb(205,49,40)" rx="2" ry="2" />
<text  x="1132.52" y="319.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (3 samples, 0.02%)</title><rect x="1187.8" y="309" width="0.2" height="15.0" fill="rgb(253,210,37)" rx="2" ry="2" />
<text  x="1190.82" y="319.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_destroy (5 samples, 0.03%)</title><rect x="1163.4" y="293" width="0.3" height="15.0" fill="rgb(254,152,34)" rx="2" ry="2" />
<text  x="1166.42" y="303.5" ></text>
</g>
<g >
<title>vfs_write (5 samples, 0.03%)</title><rect x="28.7" y="293" width="0.3" height="15.0" fill="rgb(253,19,19)" rx="2" ry="2" />
<text  x="31.67" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (17 samples, 0.10%)</title><rect x="1130.8" y="197" width="1.2" height="15.0" fill="rgb(243,182,11)" rx="2" ry="2" />
<text  x="1133.84" y="207.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (21 samples, 0.12%)</title><rect x="63.3" y="373" width="1.4" height="15.0" fill="rgb(233,25,4)" rx="2" ry="2" />
<text  x="66.29" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="1132.2" y="213" width="0.2" height="15.0" fill="rgb(207,49,2)" rx="2" ry="2" />
<text  x="1135.22" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1145.3" y="277" width="0.1" height="15.0" fill="rgb(242,127,11)" rx="2" ry="2" />
<text  x="1148.28" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (2 samples, 0.01%)</title><rect x="13.0" y="229" width="0.2" height="15.0" fill="rgb(244,81,10)" rx="2" ry="2" />
<text  x="16.03" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.02%)</title><rect x="1163.2" y="197" width="0.2" height="15.0" fill="rgb(233,8,26)" rx="2" ry="2" />
<text  x="1166.16" y="207.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.01%)</title><rect x="1174.7" y="229" width="0.1" height="15.0" fill="rgb(253,32,42)" rx="2" ry="2" />
<text  x="1177.70" y="239.5" ></text>
</g>
<g >
<title>wake_up_process (4 samples, 0.02%)</title><rect x="1132.8" y="69" width="0.3" height="15.0" fill="rgb(226,201,45)" rx="2" ry="2" />
<text  x="1135.82" y="79.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.0 (4 samples, 0.02%)</title><rect x="1129.9" y="213" width="0.3" height="15.0" fill="rgb(231,210,50)" rx="2" ry="2" />
<text  x="1132.92" y="223.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (141 samples, 0.79%)</title><rect x="53.9" y="373" width="9.3" height="15.0" fill="rgb(218,90,54)" rx="2" ry="2" />
<text  x="56.86" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="1163.1" y="277" width="0.3" height="15.0" fill="rgb(246,26,35)" rx="2" ry="2" />
<text  x="1166.09" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1152.3" y="261" width="0.2" height="15.0" fill="rgb(232,6,8)" rx="2" ry="2" />
<text  x="1155.27" y="271.5" ></text>
</g>
<g >
<title>malloc (83 samples, 0.46%)</title><rect x="1168.3" y="389" width="5.5" height="15.0" fill="rgb(224,226,6)" rx="2" ry="2" />
<text  x="1171.30" y="399.5" ></text>
</g>
<g >
<title>queue_work_on (3 samples, 0.02%)</title><rect x="1187.8" y="165" width="0.2" height="15.0" fill="rgb(225,112,19)" rx="2" ry="2" />
<text  x="1190.82" y="175.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (11 samples, 0.06%)</title><rect x="43.0" y="229" width="0.7" height="15.0" fill="rgb(215,187,16)" rx="2" ry="2" />
<text  x="45.98" y="239.5" ></text>
</g>
<g >
<title>__correctly_grouped_prefixmb (7 samples, 0.04%)</title><rect x="77.3" y="389" width="0.5" height="15.0" fill="rgb(242,138,35)" rx="2" ry="2" />
<text  x="80.34" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (3 samples, 0.02%)</title><rect x="1187.8" y="277" width="0.2" height="15.0" fill="rgb(223,77,51)" rx="2" ry="2" />
<text  x="1190.82" y="287.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (3 samples, 0.02%)</title><rect x="1130.0" y="149" width="0.2" height="15.0" fill="rgb(243,72,9)" rx="2" ry="2" />
<text  x="1132.98" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.01%)</title><rect x="1163.2" y="149" width="0.2" height="15.0" fill="rgb(222,56,19)" rx="2" ry="2" />
<text  x="1166.22" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (16,532 samples, 92.40%)</title><rect x="77.8" y="389" width="1090.4" height="15.0" fill="rgb(209,6,24)" rx="2" ry="2" />
<text  x="80.80" y="399.5" >__libc_start_main</text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="1131.8" y="133" width="0.2" height="15.0" fill="rgb(209,212,34)" rx="2" ry="2" />
<text  x="1134.83" y="143.5" ></text>
</g>
<g >
<title>main (16,532 samples, 92.40%)</title><rect x="77.8" y="373" width="1090.4" height="15.0" fill="rgb(241,56,5)" rx="2" ry="2" />
<text  x="80.80" y="383.5" >main</text>
</g>
<g >
<title>notifier_call_chain (2 samples, 0.01%)</title><rect x="1130.0" y="133" width="0.1" height="15.0" fill="rgb(230,228,41)" rx="2" ry="2" />
<text  x="1132.98" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1167.9" y="325" width="0.3" height="15.0" fill="rgb(237,195,8)" rx="2" ry="2" />
<text  x="1170.91" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="1145.3" y="229" width="0.1" height="15.0" fill="rgb(237,201,8)" rx="2" ry="2" />
<text  x="1148.28" y="239.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (217 samples, 1.21%)</title><rect x="14.3" y="373" width="14.3" height="15.0" fill="rgb(209,103,13)" rx="2" ry="2" />
<text  x="17.29" y="383.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1167.9" y="213" width="0.1" height="15.0" fill="rgb(227,225,8)" rx="2" ry="2" />
<text  x="1170.91" y="223.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.01%)</title><rect x="13.0" y="213" width="0.2" height="15.0" fill="rgb(253,121,48)" rx="2" ry="2" />
<text  x="16.03" y="223.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (6 samples, 0.03%)</title><rect x="1132.2" y="277" width="0.4" height="15.0" fill="rgb(242,130,36)" rx="2" ry="2" />
<text  x="1135.22" y="287.5" ></text>
</g>
<g >
<title>do_anonymous_page (17 samples, 0.10%)</title><rect x="1173.8" y="293" width="1.2" height="15.0" fill="rgb(233,146,4)" rx="2" ry="2" />
<text  x="1176.84" y="303.5" ></text>
</g>
<g >
<title>update_curr (3 samples, 0.02%)</title><rect x="28.3" y="197" width="0.2" height="15.0" fill="rgb(215,46,2)" rx="2" ry="2" />
<text  x="31.34" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (63 samples, 0.35%)</title><rect x="1148.4" y="293" width="4.1" height="15.0" fill="rgb(206,210,13)" rx="2" ry="2" />
<text  x="1151.38" y="303.5" ></text>
</g>
<g >
<title>irq_work_run (4 samples, 0.02%)</title><rect x="1132.8" y="181" width="0.3" height="15.0" fill="rgb(222,42,44)" rx="2" ry="2" />
<text  x="1135.82" y="191.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="1168.0" y="213" width="0.2" height="15.0" fill="rgb(230,200,4)" rx="2" ry="2" />
<text  x="1171.04" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (4 samples, 0.02%)</title><rect x="1187.4" y="293" width="0.3" height="15.0" fill="rgb(247,227,12)" rx="2" ry="2" />
<text  x="1190.43" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="41.7" y="357" width="0.1" height="15.0" fill="rgb(249,116,43)" rx="2" ry="2" />
<text  x="44.66" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (3 samples, 0.02%)</title><rect x="1130.8" y="181" width="0.2" height="15.0" fill="rgb(227,134,7)" rx="2" ry="2" />
<text  x="1133.84" y="191.5" ></text>
</g>
<g >
<title>irq_work_single (4 samples, 0.02%)</title><rect x="1132.8" y="149" width="0.3" height="15.0" fill="rgb(233,176,0)" rx="2" ry="2" />
<text  x="1135.82" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="13.0" y="341" width="0.2" height="15.0" fill="rgb(253,94,15)" rx="2" ry="2" />
<text  x="16.03" y="351.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (24 samples, 0.13%)</title><rect x="1165.7" y="309" width="1.6" height="15.0" fill="rgb(218,25,6)" rx="2" ry="2" />
<text  x="1168.73" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5 samples, 0.03%)</title><rect x="1187.4" y="325" width="0.4" height="15.0" fill="rgb(247,51,19)" rx="2" ry="2" />
<text  x="1190.43" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1173.6" y="373" width="0.2" height="15.0" fill="rgb(217,45,49)" rx="2" ry="2" />
<text  x="1176.64" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="41.7" y="341" width="0.1" height="15.0" fill="rgb(236,216,42)" rx="2" ry="2" />
<text  x="44.66" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="28.6" y="357" width="0.4" height="15.0" fill="rgb(250,61,3)" rx="2" ry="2" />
<text  x="31.60" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="35.3" y="341" width="0.1" height="15.0" fill="rgb(232,194,40)" rx="2" ry="2" />
<text  x="38.26" y="351.5" ></text>
</g>
<g >
<title>std::string::reserve (35 samples, 0.20%)</title><rect x="66.1" y="373" width="2.3" height="15.0" fill="rgb(236,224,0)" rx="2" ry="2" />
<text  x="69.13" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1163.1" y="245" width="0.3" height="15.0" fill="rgb(225,169,9)" rx="2" ry="2" />
<text  x="1166.09" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9 samples, 0.05%)</title><rect x="1187.4" y="357" width="0.6" height="15.0" fill="rgb(250,220,5)" rx="2" ry="2" />
<text  x="1190.43" y="367.5" ></text>
</g>
<g >
<title>dbs_irq_work (4 samples, 0.02%)</title><rect x="1132.8" y="133" width="0.3" height="15.0" fill="rgb(210,108,26)" rx="2" ry="2" />
<text  x="1135.82" y="143.5" ></text>
</g>
<g >
<title>Utility::InitializeArray (525 samples, 2.93%)</title><rect x="1133.2" y="341" width="34.6" height="15.0" fill="rgb(241,180,0)" rx="2" ry="2" />
<text  x="1136.21" y="351.5" >Ut..</text>
</g>
<g >
<title>__alloc_pages_nodemask (14 samples, 0.08%)</title><rect x="1173.9" y="261" width="0.9" height="15.0" fill="rgb(254,172,15)" rx="2" ry="2" />
<text  x="1176.91" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (18 samples, 0.10%)</title><rect x="1173.8" y="357" width="1.2" height="15.0" fill="rgb(210,27,18)" rx="2" ry="2" />
<text  x="1176.78" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1145.3" y="245" width="0.1" height="15.0" fill="rgb(211,103,44)" rx="2" ry="2" />
<text  x="1148.28" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (4 samples, 0.02%)</title><rect x="28.3" y="213" width="0.3" height="15.0" fill="rgb(221,185,37)" rx="2" ry="2" />
<text  x="31.34" y="223.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.08%)</title><rect x="42.8" y="309" width="1.0" height="15.0" fill="rgb(218,78,30)" rx="2" ry="2" />
<text  x="45.85" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (2 samples, 0.01%)</title><rect x="53.7" y="373" width="0.2" height="15.0" fill="rgb(237,124,11)" rx="2" ry="2" />
<text  x="56.73" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (5 samples, 0.03%)</title><rect x="28.3" y="261" width="0.3" height="15.0" fill="rgb(246,129,20)" rx="2" ry="2" />
<text  x="31.27" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="62.9" y="293" width="0.1" height="15.0" fill="rgb(236,201,23)" rx="2" ry="2" />
<text  x="65.90" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.02%)</title><rect x="1152.3" y="213" width="0.2" height="15.0" fill="rgb(219,52,30)" rx="2" ry="2" />
<text  x="1155.27" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (13 samples, 0.07%)</title><rect x="13.2" y="373" width="0.9" height="15.0" fill="rgb(254,213,8)" rx="2" ry="2" />
<text  x="16.23" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1152.3" y="245" width="0.2" height="15.0" fill="rgb(247,80,34)" rx="2" ry="2" />
<text  x="1155.27" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (13 samples, 0.07%)</title><rect x="1174.0" y="245" width="0.8" height="15.0" fill="rgb(248,137,18)" rx="2" ry="2" />
<text  x="1176.97" y="255.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (75 samples, 0.42%)</title><rect x="48.8" y="373" width="4.9" height="15.0" fill="rgb(232,0,24)" rx="2" ry="2" />
<text  x="51.78" y="383.5" ></text>
</g>
<g >
<title>_int_free (44 samples, 0.25%)</title><rect x="1145.4" y="293" width="2.9" height="15.0" fill="rgb(240,102,14)" rx="2" ry="2" />
<text  x="1148.41" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10 samples, 0.06%)</title><rect x="1187.4" y="373" width="0.6" height="15.0" fill="rgb(251,105,11)" rx="2" ry="2" />
<text  x="1190.36" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.01%)</title><rect x="1145.3" y="181" width="0.1" height="15.0" fill="rgb(250,102,30)" rx="2" ry="2" />
<text  x="1148.28" y="191.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (6 samples, 0.03%)</title><rect x="1132.2" y="261" width="0.4" height="15.0" fill="rgb(223,155,47)" rx="2" ry="2" />
<text  x="1135.22" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (27 samples, 0.15%)</title><rect x="1130.2" y="229" width="1.8" height="15.0" fill="rgb(221,166,23)" rx="2" ry="2" />
<text  x="1133.18" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="42.8" y="341" width="1.0" height="15.0" fill="rgb(251,170,21)" rx="2" ry="2" />
<text  x="45.85" y="351.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="63.0" y="309" width="0.2" height="15.0" fill="rgb(221,50,11)" rx="2" ry="2" />
<text  x="66.03" y="319.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.02%)</title><rect x="28.8" y="277" width="0.2" height="15.0" fill="rgb(251,204,4)" rx="2" ry="2" />
<text  x="31.80" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="1163.2" y="213" width="0.2" height="15.0" fill="rgb(207,66,12)" rx="2" ry="2" />
<text  x="1166.16" y="223.5" ></text>
</g>
<g >
<title>clear_page_rep (10 samples, 0.06%)</title><rect x="1174.0" y="229" width="0.7" height="15.0" fill="rgb(221,7,28)" rx="2" ry="2" />
<text  x="1177.04" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.02%)</title><rect x="1187.4" y="309" width="0.3" height="15.0" fill="rgb(246,2,34)" rx="2" ry="2" />
<text  x="1190.43" y="319.5" ></text>
</g>
<g >
<title>psi_task_switch (4 samples, 0.02%)</title><rect x="1132.4" y="213" width="0.2" height="15.0" fill="rgb(211,63,32)" rx="2" ry="2" />
<text  x="1135.36" y="223.5" ></text>
</g>
<g >
<title>update_wall_time (4 samples, 0.02%)</title><rect x="1129.9" y="197" width="0.3" height="15.0" fill="rgb(222,52,1)" rx="2" ry="2" />
<text  x="1132.92" y="207.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (3 samples, 0.02%)</title><rect x="28.8" y="245" width="0.2" height="15.0" fill="rgb(227,65,53)" rx="2" ry="2" />
<text  x="31.80" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="62.9" y="325" width="0.1" height="15.0" fill="rgb(245,77,25)" rx="2" ry="2" />
<text  x="65.90" y="335.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (4 samples, 0.02%)</title><rect x="1132.8" y="197" width="0.3" height="15.0" fill="rgb(228,208,20)" rx="2" ry="2" />
<text  x="1135.82" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (49 samples, 0.27%)</title><rect x="10.0" y="389" width="3.2" height="15.0" fill="rgb(233,143,5)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (2 samples, 0.01%)</title><rect x="1132.0" y="261" width="0.1" height="15.0" fill="rgb(221,185,51)" rx="2" ry="2" />
<text  x="1134.96" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (18 samples, 0.10%)</title><rect x="1173.8" y="341" width="1.2" height="15.0" fill="rgb(209,157,31)" rx="2" ry="2" />
<text  x="1176.78" y="351.5" ></text>
</g>
<g >
<title>Serial::SerialSolve (16,528 samples, 92.38%)</title><rect x="77.8" y="357" width="1090.1" height="15.0" fill="rgb(224,217,8)" rx="2" ry="2" />
<text  x="80.80" y="367.5" >Serial::SerialSolve</text>
</g>
<g >
<title>update_load_avg (4 samples, 0.02%)</title><rect x="1131.4" y="165" width="0.3" height="15.0" fill="rgb(219,85,32)" rx="2" ry="2" />
<text  x="1134.43" y="175.5" ></text>
</g>
<g >
<title>__vm_munmap (4 samples, 0.02%)</title><rect x="1167.9" y="293" width="0.3" height="15.0" fill="rgb(217,64,23)" rx="2" ry="2" />
<text  x="1170.91" y="303.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.03%)</title><rect x="1132.2" y="245" width="0.4" height="15.0" fill="rgb(209,12,16)" rx="2" ry="2" />
<text  x="1135.22" y="255.5" ></text>
</g>
<g >
<title>malloc (34 samples, 0.19%)</title><rect x="39.5" y="373" width="2.3" height="15.0" fill="rgb(237,169,41)" rx="2" ry="2" />
<text  x="42.55" y="383.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (2 samples, 0.01%)</title><rect x="28.8" y="181" width="0.1" height="15.0" fill="rgb(221,42,25)" rx="2" ry="2" />
<text  x="31.80" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (4 samples, 0.02%)</title><rect x="28.3" y="229" width="0.3" height="15.0" fill="rgb(228,144,4)" rx="2" ry="2" />
<text  x="31.34" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (18 samples, 0.10%)</title><rect x="1173.8" y="373" width="1.2" height="15.0" fill="rgb(210,119,41)" rx="2" ry="2" />
<text  x="1176.78" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="53.6" y="357" width="0.1" height="15.0" fill="rgb(231,74,53)" rx="2" ry="2" />
<text  x="56.60" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.01%)</title><rect x="1145.3" y="149" width="0.1" height="15.0" fill="rgb(225,62,7)" rx="2" ry="2" />
<text  x="1148.28" y="159.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="1145.3" y="165" width="0.1" height="15.0" fill="rgb(233,117,19)" rx="2" ry="2" />
<text  x="1148.28" y="175.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.03%)</title><rect x="1132.2" y="229" width="0.4" height="15.0" fill="rgb(212,8,21)" rx="2" ry="2" />
<text  x="1135.22" y="239.5" ></text>
</g>
<g >
<title>account_process_tick (8 samples, 0.04%)</title><rect x="1130.2" y="197" width="0.6" height="15.0" fill="rgb(227,153,32)" rx="2" ry="2" />
<text  x="1133.24" y="207.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.07%)</title><rect x="42.9" y="293" width="0.9" height="15.0" fill="rgb(231,9,1)" rx="2" ry="2" />
<text  x="45.91" y="303.5" ></text>
</g>
<g >
<title>__munmap (4 samples, 0.02%)</title><rect x="1167.9" y="357" width="0.3" height="15.0" fill="rgb(227,119,31)" rx="2" ry="2" />
<text  x="1170.91" y="367.5" ></text>
</g>
<g >
<title>update_curr (4 samples, 0.02%)</title><rect x="1131.2" y="165" width="0.2" height="15.0" fill="rgb(214,92,3)" rx="2" ry="2" />
<text  x="1134.17" y="175.5" ></text>
</g>
<g >
<title>serialge (17,891 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(233,102,17)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >serialge</text>
</g>
<g >
<title>irq_work_single (3 samples, 0.02%)</title><rect x="1187.8" y="197" width="0.2" height="15.0" fill="rgb(224,24,36)" rx="2" ry="2" />
<text  x="1190.82" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="1168.0" y="245" width="0.2" height="15.0" fill="rgb(208,145,43)" rx="2" ry="2" />
<text  x="1171.04" y="255.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (5 samples, 0.03%)</title><rect x="1155.2" y="293" width="0.4" height="15.0" fill="rgb(217,170,2)" rx="2" ry="2" />
<text  x="1158.24" y="303.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (11 samples, 0.06%)</title><rect x="1153.4" y="293" width="0.7" height="15.0" fill="rgb(234,205,25)" rx="2" ry="2" />
<text  x="1156.40" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.01%)</title><rect x="13.0" y="245" width="0.2" height="15.0" fill="rgb(215,1,21)" rx="2" ry="2" />
<text  x="16.03" y="255.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="13.0" y="261" width="0.2" height="15.0" fill="rgb(241,85,38)" rx="2" ry="2" />
<text  x="16.03" y="271.5" ></text>
</g>
<g >
<title>timekeeping_advance (3 samples, 0.02%)</title><rect x="1130.0" y="181" width="0.2" height="15.0" fill="rgb(213,152,31)" rx="2" ry="2" />
<text  x="1132.98" y="191.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (30 samples, 0.17%)</title><rect x="1188.0" y="389" width="2.0" height="15.0" fill="rgb(251,153,28)" rx="2" ry="2" />
<text  x="1191.02" y="399.5" ></text>
</g>
<g >
<title>read (16 samples, 0.09%)</title><rect x="42.8" y="373" width="1.0" height="15.0" fill="rgb(213,70,30)" rx="2" ry="2" />
<text  x="45.78" y="383.5" ></text>
</g>
<g >
<title>irq_work_run_list (3 samples, 0.02%)</title><rect x="1187.8" y="213" width="0.2" height="15.0" fill="rgb(233,57,31)" rx="2" ry="2" />
<text  x="1190.82" y="223.5" ></text>
</g>
<g >
<title>task_tick_fair (2 samples, 0.01%)</title><rect x="1145.3" y="133" width="0.1" height="15.0" fill="rgb(231,176,0)" rx="2" ry="2" />
<text  x="1148.28" y="143.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (3 samples, 0.02%)</title><rect x="1187.8" y="245" width="0.2" height="15.0" fill="rgb(213,209,29)" rx="2" ry="2" />
<text  x="1190.82" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.02%)</title><rect x="1152.3" y="229" width="0.2" height="15.0" fill="rgb(228,227,42)" rx="2" ry="2" />
<text  x="1155.27" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="28.6" y="341" width="0.4" height="15.0" fill="rgb(208,15,35)" rx="2" ry="2" />
<text  x="31.60" y="351.5" ></text>
</g>
<g >
<title>irq_work_run (3 samples, 0.02%)</title><rect x="1187.8" y="229" width="0.2" height="15.0" fill="rgb(241,221,6)" rx="2" ry="2" />
<text  x="1190.82" y="239.5" ></text>
</g>
<g >
<title>[unknown] (862 samples, 4.82%)</title><rect x="13.2" y="389" width="56.9" height="15.0" fill="rgb(218,2,22)" rx="2" ry="2" />
<text  x="16.23" y="399.5" >[unkno..</text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (19 samples, 0.11%)</title><rect x="1173.8" y="389" width="1.2" height="15.0" fill="rgb(249,59,17)" rx="2" ry="2" />
<text  x="1176.78" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (9 samples, 0.05%)</title><rect x="28.0" y="325" width="0.6" height="15.0" fill="rgb(245,82,48)" rx="2" ry="2" />
<text  x="31.01" y="335.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="1187.6" y="261" width="0.1" height="15.0" fill="rgb(251,44,54)" rx="2" ry="2" />
<text  x="1190.56" y="271.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (20 samples, 0.11%)</title><rect x="1164.4" y="309" width="1.3" height="15.0" fill="rgb(244,40,50)" rx="2" ry="2" />
<text  x="1167.41" y="319.5" ></text>
</g>
<g >
<title>update_process_times (3 samples, 0.02%)</title><rect x="1152.3" y="165" width="0.2" height="15.0" fill="rgb(223,85,45)" rx="2" ry="2" />
<text  x="1155.34" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="13.0" y="357" width="0.2" height="15.0" fill="rgb(234,91,32)" rx="2" ry="2" />
<text  x="16.03" y="367.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;double&gt; (2 samples, 0.01%)</title><rect x="63.2" y="341" width="0.1" height="15.0" fill="rgb(207,44,24)" rx="2" ry="2" />
<text  x="66.16" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="62.9" y="309" width="0.1" height="15.0" fill="rgb(229,61,51)" rx="2" ry="2" />
<text  x="65.90" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="14.1" y="373" width="0.1" height="15.0" fill="rgb(224,50,5)" rx="2" ry="2" />
<text  x="17.09" y="383.5" ></text>
</g>
<g >
<title>_int_free (53 samples, 0.30%)</title><rect x="36.0" y="373" width="3.5" height="15.0" fill="rgb(212,110,44)" rx="2" ry="2" />
<text  x="38.99" y="383.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.01%)</title><rect x="1187.9" y="133" width="0.1" height="15.0" fill="rgb(225,74,20)" rx="2" ry="2" />
<text  x="1190.89" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="42.8" y="357" width="1.0" height="15.0" fill="rgb(235,224,50)" rx="2" ry="2" />
<text  x="45.85" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (14 samples, 0.08%)</title><rect x="42.8" y="325" width="1.0" height="15.0" fill="rgb(239,143,40)" rx="2" ry="2" />
<text  x="45.85" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="63.2" y="357" width="0.1" height="15.0" fill="rgb(220,135,17)" rx="2" ry="2" />
<text  x="66.16" y="367.5" ></text>
</g>
<g >
<title>all (17,891 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(229,149,11)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="53.7" y="357" width="0.2" height="15.0" fill="rgb(233,139,14)" rx="2" ry="2" />
<text  x="56.73" y="367.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (9 samples, 0.05%)</title><rect x="1132.6" y="277" width="0.6" height="15.0" fill="rgb(249,184,4)" rx="2" ry="2" />
<text  x="1135.62" y="287.5" ></text>
</g>
<g >
<title>timekeeping_update (3 samples, 0.02%)</title><rect x="1130.0" y="165" width="0.2" height="15.0" fill="rgb(208,206,18)" rx="2" ry="2" />
<text  x="1132.98" y="175.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1167.9" y="197" width="0.1" height="15.0" fill="rgb(211,26,2)" rx="2" ry="2" />
<text  x="1170.91" y="207.5" ></text>
</g>
<g >
<title>__queue_work (3 samples, 0.02%)</title><rect x="1187.8" y="149" width="0.2" height="15.0" fill="rgb(227,25,41)" rx="2" ry="2" />
<text  x="1190.82" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="1152.3" y="277" width="0.2" height="15.0" fill="rgb(224,82,40)" rx="2" ry="2" />
<text  x="1155.27" y="287.5" ></text>
</g>
<g >
<title>tty_write (3 samples, 0.02%)</title><rect x="28.8" y="261" width="0.2" height="15.0" fill="rgb(229,109,35)" rx="2" ry="2" />
<text  x="31.80" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.03%)</title><rect x="28.6" y="325" width="0.4" height="15.0" fill="rgb(225,12,38)" rx="2" ry="2" />
<text  x="31.60" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter (9 samples, 0.05%)</title><rect x="43.0" y="213" width="0.6" height="15.0" fill="rgb(251,142,52)" rx="2" ry="2" />
<text  x="46.04" y="223.5" ></text>
</g>
<g >
<title>psi_group_change (4 samples, 0.02%)</title><rect x="1132.4" y="197" width="0.2" height="15.0" fill="rgb(243,100,46)" rx="2" ry="2" />
<text  x="1135.36" y="207.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.02%)</title><rect x="1167.9" y="261" width="0.3" height="15.0" fill="rgb(209,72,42)" rx="2" ry="2" />
<text  x="1170.91" y="271.5" ></text>
</g>
<g >
<title>__strtod_l (9 samples, 0.05%)</title><rect x="35.4" y="373" width="0.6" height="15.0" fill="rgb(220,134,49)" rx="2" ry="2" />
<text  x="38.39" y="383.5" ></text>
</g>
<g >
<title>insert_work (4 samples, 0.02%)</title><rect x="1132.8" y="85" width="0.3" height="15.0" fill="rgb(227,134,38)" rx="2" ry="2" />
<text  x="1135.82" y="95.5" ></text>
</g>
<g >
<title>dbs_irq_work (3 samples, 0.02%)</title><rect x="1187.8" y="181" width="0.2" height="15.0" fill="rgb(245,208,6)" rx="2" ry="2" />
<text  x="1190.82" y="191.5" ></text>
</g>
<g >
<title>cpuacct_account_field (6 samples, 0.03%)</title><rect x="1130.4" y="165" width="0.4" height="15.0" fill="rgb(252,31,9)" rx="2" ry="2" />
<text  x="1133.38" y="175.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.01%)</title><rect x="1132.9" y="37" width="0.1" height="15.0" fill="rgb(220,189,8)" rx="2" ry="2" />
<text  x="1135.88" y="47.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="1163.1" y="261" width="0.3" height="15.0" fill="rgb(244,0,24)" rx="2" ry="2" />
<text  x="1166.09" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9 samples, 0.05%)</title><rect x="28.0" y="341" width="0.6" height="15.0" fill="rgb(247,125,35)" rx="2" ry="2" />
<text  x="31.01" y="351.5" ></text>
</g>
<g >
<title>__mpn_construct_double (14 samples, 0.08%)</title><rect x="29.0" y="373" width="0.9" height="15.0" fill="rgb(216,7,4)" rx="2" ry="2" />
<text  x="32.00" y="383.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1167.9" y="245" width="0.1" height="15.0" fill="rgb(250,71,48)" rx="2" ry="2" />
<text  x="1170.91" y="255.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (2 samples, 0.01%)</title><rect x="1168.0" y="197" width="0.2" height="15.0" fill="rgb(216,16,30)" rx="2" ry="2" />
<text  x="1171.04" y="207.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="1163.2" y="165" width="0.2" height="15.0" fill="rgb(218,35,42)" rx="2" ry="2" />
<text  x="1166.22" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="1187.4" y="341" width="0.4" height="15.0" fill="rgb(238,138,17)" rx="2" ry="2" />
<text  x="1190.43" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1167.9" y="341" width="0.3" height="15.0" fill="rgb(221,97,3)" rx="2" ry="2" />
<text  x="1170.91" y="351.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (2 samples, 0.01%)</title><rect x="28.1" y="261" width="0.2" height="15.0" fill="rgb(224,50,17)" rx="2" ry="2" />
<text  x="31.14" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.10%)</title><rect x="1173.8" y="325" width="1.2" height="15.0" fill="rgb(209,28,43)" rx="2" ry="2" />
<text  x="1176.78" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="63.0" y="325" width="0.2" height="15.0" fill="rgb(217,186,44)" rx="2" ry="2" />
<text  x="66.03" y="335.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="1168.0" y="229" width="0.2" height="15.0" fill="rgb(234,105,3)" rx="2" ry="2" />
<text  x="1171.04" y="239.5" ></text>
</g>
<g >
<title>__queue_work (4 samples, 0.02%)</title><rect x="1132.8" y="101" width="0.3" height="15.0" fill="rgb(214,123,34)" rx="2" ry="2" />
<text  x="1135.82" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.01%)</title><rect x="1163.2" y="181" width="0.2" height="15.0" fill="rgb(224,200,48)" rx="2" ry="2" />
<text  x="1166.22" y="191.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_put (2 samples, 0.01%)</title><rect x="63.2" y="373" width="0.1" height="15.0" fill="rgb(207,79,22)" rx="2" ry="2" />
<text  x="66.16" y="383.5" ></text>
</g>
<g >
<title>round_and_return (75 samples, 0.42%)</title><rect x="43.8" y="373" width="5.0" height="15.0" fill="rgb(221,139,38)" rx="2" ry="2" />
<text  x="46.83" y="383.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.07%)</title><rect x="1152.5" y="293" width="0.9" height="15.0" fill="rgb(225,187,1)" rx="2" ry="2" />
<text  x="1155.54" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="13.0" y="325" width="0.2" height="15.0" fill="rgb(225,24,39)" rx="2" ry="2" />
<text  x="16.03" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="77.1" y="357" width="0.2" height="15.0" fill="rgb(206,0,10)" rx="2" ry="2" />
<text  x="80.14" y="367.5" ></text>
</g>
<g >
<title>account_user_time (8 samples, 0.04%)</title><rect x="1130.2" y="181" width="0.6" height="15.0" fill="rgb(253,183,10)" rx="2" ry="2" />
<text  x="1133.24" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (34 samples, 0.19%)</title><rect x="1129.7" y="261" width="2.3" height="15.0" fill="rgb(213,207,50)" rx="2" ry="2" />
<text  x="1132.72" y="271.5" ></text>
</g>
<g >
<title>sysvec_irq_work (3 samples, 0.02%)</title><rect x="1187.8" y="261" width="0.2" height="15.0" fill="rgb(214,74,19)" rx="2" ry="2" />
<text  x="1190.82" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1145.3" y="261" width="0.1" height="15.0" fill="rgb(227,141,35)" rx="2" ry="2" />
<text  x="1148.28" y="271.5" ></text>
</g>
<g >
<title>tick_program_event (2 samples, 0.01%)</title><rect x="1132.1" y="261" width="0.1" height="15.0" fill="rgb(253,18,4)" rx="2" ry="2" />
<text  x="1135.09" y="271.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (17 samples, 0.10%)</title><rect x="1154.1" y="293" width="1.1" height="15.0" fill="rgb(241,216,51)" rx="2" ry="2" />
<text  x="1157.12" y="303.5" ></text>
</g>
<g >
<title>ReadLine (517 samples, 2.89%)</title><rect x="1133.2" y="325" width="34.1" height="15.0" fill="rgb(245,184,25)" rx="2" ry="2" />
<text  x="1136.21" y="335.5" >Re..</text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.02%)</title><rect x="1163.1" y="229" width="0.3" height="15.0" fill="rgb(235,225,24)" rx="2" ry="2" />
<text  x="1166.09" y="239.5" ></text>
</g>
<g >
<title>update_process_times (5 samples, 0.03%)</title><rect x="28.3" y="245" width="0.3" height="15.0" fill="rgb(221,114,18)" rx="2" ry="2" />
<text  x="31.27" y="255.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (108 samples, 0.60%)</title><rect x="70.2" y="389" width="7.1" height="15.0" fill="rgb(230,23,13)" rx="2" ry="2" />
<text  x="73.22" y="399.5" ></text>
</g>
<g >
<title>task_tick_fair (10 samples, 0.06%)</title><rect x="1131.0" y="181" width="0.7" height="15.0" fill="rgb(237,196,39)" rx="2" ry="2" />
<text  x="1134.04" y="191.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.01%)</title><rect x="1132.1" y="229" width="0.1" height="15.0" fill="rgb(212,12,20)" rx="2" ry="2" />
<text  x="1135.09" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.01%)</title><rect x="1145.3" y="197" width="0.1" height="15.0" fill="rgb(211,49,33)" rx="2" ry="2" />
<text  x="1148.28" y="207.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (25 samples, 0.14%)</title><rect x="68.4" y="373" width="1.7" height="15.0" fill="rgb(225,227,44)" rx="2" ry="2" />
<text  x="71.44" y="383.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;double&gt; (8 samples, 0.04%)</title><rect x="1167.3" y="325" width="0.5" height="15.0" fill="rgb(251,228,10)" rx="2" ry="2" />
<text  x="1170.31" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (4 samples, 0.02%)</title><rect x="1187.4" y="277" width="0.3" height="15.0" fill="rgb(225,152,29)" rx="2" ry="2" />
<text  x="1190.43" y="287.5" ></text>
</g>
<g >
<title>update_process_times (27 samples, 0.15%)</title><rect x="1130.2" y="213" width="1.8" height="15.0" fill="rgb(252,228,34)" rx="2" ry="2" />
<text  x="1133.18" y="223.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (9 samples, 0.05%)</title><rect x="1132.6" y="261" width="0.6" height="15.0" fill="rgb(209,89,1)" rx="2" ry="2" />
<text  x="1135.62" y="271.5" ></text>
</g>
<g >
<title>__strlen_avx2 (62 samples, 0.35%)</title><rect x="31.3" y="373" width="4.1" height="15.0" fill="rgb(245,124,1)" rx="2" ry="2" />
<text  x="34.30" y="383.5" ></text>
</g>
<g >
<title>__mpn_lshift (21 samples, 0.12%)</title><rect x="29.9" y="373" width="1.4" height="15.0" fill="rgb(214,3,41)" rx="2" ry="2" />
<text  x="32.92" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (2 samples, 0.01%)</title><rect x="1163.2" y="133" width="0.2" height="15.0" fill="rgb(246,72,14)" rx="2" ry="2" />
<text  x="1166.22" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_write (6 samples, 0.03%)</title><rect x="28.6" y="373" width="0.4" height="15.0" fill="rgb(205,42,27)" rx="2" ry="2" />
<text  x="31.60" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (4 samples, 0.02%)</title><rect x="1132.8" y="229" width="0.3" height="15.0" fill="rgb(228,175,37)" rx="2" ry="2" />
<text  x="1135.82" y="239.5" ></text>
</g>
<g >
<title>n_tty_write (3 samples, 0.02%)</title><rect x="28.8" y="229" width="0.2" height="15.0" fill="rgb(236,0,32)" rx="2" ry="2" />
<text  x="31.80" y="239.5" ></text>
</g>
<g >
<title>do_output_char (2 samples, 0.01%)</title><rect x="28.8" y="213" width="0.1" height="15.0" fill="rgb(210,108,7)" rx="2" ry="2" />
<text  x="31.80" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.04%)</title><rect x="1132.6" y="245" width="0.5" height="15.0" fill="rgb(248,45,33)" rx="2" ry="2" />
<text  x="1135.62" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5 samples, 0.03%)</title><rect x="53.3" y="357" width="0.3" height="15.0" fill="rgb(245,158,13)" rx="2" ry="2" />
<text  x="56.27" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="1167.9" y="229" width="0.1" height="15.0" fill="rgb(226,153,25)" rx="2" ry="2" />
<text  x="1170.91" y="239.5" ></text>
</g>
<g >
<title>queue_work_on (4 samples, 0.02%)</title><rect x="1132.8" y="117" width="0.3" height="15.0" fill="rgb(245,75,34)" rx="2" ry="2" />
<text  x="1135.82" y="127.5" ></text>
</g>
<g >
<title>pty_write (2 samples, 0.01%)</title><rect x="28.8" y="197" width="0.1" height="15.0" fill="rgb(248,10,4)" rx="2" ry="2" />
<text  x="31.80" y="207.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3 samples, 0.02%)</title><rect x="1187.8" y="325" width="0.2" height="15.0" fill="rgb(248,68,9)" rx="2" ry="2" />
<text  x="1190.82" y="335.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (2 samples, 0.01%)</title><rect x="1131.6" y="149" width="0.1" height="15.0" fill="rgb(253,68,24)" rx="2" ry="2" />
<text  x="1134.56" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="35.3" y="357" width="0.1" height="15.0" fill="rgb(249,73,35)" rx="2" ry="2" />
<text  x="38.26" y="367.5" ></text>
</g>
<g >
<title>Serial::ForwardElimination (15,994 samples, 89.40%)</title><rect x="78.3" y="341" width="1054.9" height="15.0" fill="rgb(216,44,14)" rx="2" ry="2" />
<text  x="81.33" y="351.5" >Serial::ForwardElimination</text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="1187.8" y="293" width="0.2" height="15.0" fill="rgb(205,181,12)" rx="2" ry="2" />
<text  x="1190.82" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.02%)</title><rect x="1132.8" y="53" width="0.2" height="15.0" fill="rgb(251,96,48)" rx="2" ry="2" />
<text  x="1135.82" y="63.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="13.0" y="373" width="0.2" height="15.0" fill="rgb(245,199,51)" rx="2" ry="2" />
<text  x="16.03" y="383.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (22 samples, 0.12%)</title><rect x="64.7" y="373" width="1.4" height="15.0" fill="rgb(223,151,13)" rx="2" ry="2" />
<text  x="67.68" y="383.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.08%)</title><rect x="41.8" y="373" width="1.0" height="15.0" fill="rgb(210,218,48)" rx="2" ry="2" />
<text  x="44.79" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8 samples, 0.04%)</title><rect x="28.1" y="293" width="0.5" height="15.0" fill="rgb(250,201,32)" rx="2" ry="2" />
<text  x="31.07" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="62.9" y="357" width="0.3" height="15.0" fill="rgb(232,96,5)" rx="2" ry="2" />
<text  x="65.90" y="367.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (6 samples, 0.03%)</title><rect x="1132.2" y="293" width="0.4" height="15.0" fill="rgb(230,138,14)" rx="2" ry="2" />
<text  x="1135.22" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="62.9" y="341" width="0.3" height="15.0" fill="rgb(211,16,36)" rx="2" ry="2" />
<text  x="65.90" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.01%)</title><rect x="13.0" y="277" width="0.2" height="15.0" fill="rgb(230,86,54)" rx="2" ry="2" />
<text  x="16.03" y="287.5" ></text>
</g>
<g >
<title>sysvec_irq_work (4 samples, 0.02%)</title><rect x="1132.8" y="213" width="0.3" height="15.0" fill="rgb(251,4,23)" rx="2" ry="2" />
<text  x="1135.82" y="223.5" ></text>
</g>
<g >
<title>alloc_pages_vma (14 samples, 0.08%)</title><rect x="1173.9" y="277" width="0.9" height="15.0" fill="rgb(244,162,17)" rx="2" ry="2" />
<text  x="1176.91" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (3 samples, 0.02%)</title><rect x="1152.3" y="181" width="0.2" height="15.0" fill="rgb(239,167,54)" rx="2" ry="2" />
<text  x="1155.34" y="191.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (12 samples, 0.07%)</title><rect x="42.9" y="261" width="0.8" height="15.0" fill="rgb(209,226,50)" rx="2" ry="2" />
<text  x="45.91" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.01%)</title><rect x="13.0" y="293" width="0.2" height="15.0" fill="rgb(218,211,19)" rx="2" ry="2" />
<text  x="16.03" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (9 samples, 0.05%)</title><rect x="1132.6" y="293" width="0.6" height="15.0" fill="rgb(233,49,31)" rx="2" ry="2" />
<text  x="1135.62" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (41 samples, 0.23%)</title><rect x="1129.5" y="293" width="2.7" height="15.0" fill="rgb(251,100,41)" rx="2" ry="2" />
<text  x="1132.52" y="303.5" ></text>
</g>
<g >
<title>std::string::reserve (10 samples, 0.06%)</title><rect x="1163.7" y="293" width="0.7" height="15.0" fill="rgb(251,76,28)" rx="2" ry="2" />
<text  x="1166.75" y="303.5" ></text>
</g>
<g >
<title>__do_munmap (4 samples, 0.02%)</title><rect x="1167.9" y="277" width="0.3" height="15.0" fill="rgb(236,136,41)" rx="2" ry="2" />
<text  x="1170.91" y="287.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (2 samples, 0.01%)</title><rect x="1131.8" y="149" width="0.2" height="15.0" fill="rgb(216,10,44)" rx="2" ry="2" />
<text  x="1134.83" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (7 samples, 0.04%)</title><rect x="28.1" y="277" width="0.5" height="15.0" fill="rgb(227,36,38)" rx="2" ry="2" />
<text  x="31.14" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10 samples, 0.06%)</title><rect x="27.9" y="357" width="0.7" height="15.0" fill="rgb(210,229,4)" rx="2" ry="2" />
<text  x="30.94" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (39 samples, 0.22%)</title><rect x="1129.7" y="277" width="2.5" height="15.0" fill="rgb(206,9,1)" rx="2" ry="2" />
<text  x="1132.65" y="287.5" ></text>
</g>
<g >
<title>generic_file_read_iter (11 samples, 0.06%)</title><rect x="43.0" y="245" width="0.7" height="15.0" fill="rgb(208,169,46)" rx="2" ry="2" />
<text  x="45.98" y="255.5" ></text>
</g>
<g >
<title>clockevents_program_event (2 samples, 0.01%)</title><rect x="1132.1" y="245" width="0.1" height="15.0" fill="rgb(243,104,15)" rx="2" ry="2" />
<text  x="1135.09" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1173.6" y="357" width="0.2" height="15.0" fill="rgb(231,111,15)" rx="2" ry="2" />
<text  x="1176.64" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="13.0" y="309" width="0.2" height="15.0" fill="rgb(236,44,53)" rx="2" ry="2" />
<text  x="16.03" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (18 samples, 0.10%)</title><rect x="1173.8" y="309" width="1.2" height="15.0" fill="rgb(212,169,6)" rx="2" ry="2" />
<text  x="1176.78" y="319.5" ></text>
</g>
<g >
<title>kick_ilb (2 samples, 0.01%)</title><rect x="1131.8" y="165" width="0.2" height="15.0" fill="rgb(227,0,27)" rx="2" ry="2" />
<text  x="1134.83" y="175.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (4 samples, 0.02%)</title><rect x="1129.9" y="229" width="0.3" height="15.0" fill="rgb(241,136,42)" rx="2" ry="2" />
<text  x="1132.92" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (31 samples, 0.17%)</title><rect x="1129.9" y="245" width="2.1" height="15.0" fill="rgb(239,94,50)" rx="2" ry="2" />
<text  x="1132.92" y="255.5" ></text>
</g>
<g >
<title>new_sync_read (12 samples, 0.07%)</title><rect x="42.9" y="277" width="0.8" height="15.0" fill="rgb(213,118,5)" rx="2" ry="2" />
<text  x="45.91" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.02%)</title><rect x="1152.3" y="197" width="0.2" height="15.0" fill="rgb(251,165,33)" rx="2" ry="2" />
<text  x="1155.34" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (58 samples, 0.32%)</title><rect x="1129.4" y="325" width="3.8" height="15.0" fill="rgb(227,44,27)" rx="2" ry="2" />
<text  x="1132.39" y="335.5" ></text>
</g>
</g>
</svg>
