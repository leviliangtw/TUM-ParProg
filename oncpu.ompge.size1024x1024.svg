<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >On-CPU Time Flame Graph: $ ./ompge ./ge_data/size1024x1024</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1070.3" y="373" width="0.4" height="15.0" fill="rgb(222,114,5)" rx="2" ry="2" />
<text  x="1073.30" y="383.5" ></text>
</g>
<g >
<title>mq_flush_data_end_io (1 samples, 0.03%)</title><rect x="957.6" y="293" width="0.3" height="15.0" fill="rgb(205,201,49)" rx="2" ry="2" />
<text  x="960.55" y="303.5" ></text>
</g>
<g >
<title>end_bio_bh_io_sync (1 samples, 0.03%)</title><rect x="957.6" y="213" width="0.3" height="15.0" fill="rgb(240,61,13)" rx="2" ry="2" />
<text  x="960.55" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1070.3" y="453" width="0.4" height="15.0" fill="rgb(245,38,52)" rx="2" ry="2" />
<text  x="1073.30" y="463.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.07%)</title><rect x="1034.8" y="277" width="0.7" height="15.0" fill="rgb(249,46,12)" rx="2" ry="2" />
<text  x="1037.78" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="304.6" y="485" width="0.8" height="15.0" fill="rgb(231,192,40)" rx="2" ry="2" />
<text  x="307.61" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.03%)</title><rect x="962.6" y="341" width="0.4" height="15.0" fill="rgb(205,191,45)" rx="2" ry="2" />
<text  x="965.57" y="351.5" ></text>
</g>
<g >
<title>get_signal (2 samples, 0.07%)</title><rect x="961.8" y="405" width="0.8" height="15.0" fill="rgb(206,204,9)" rx="2" ry="2" />
<text  x="964.80" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.20%)</title><rect x="970.3" y="437" width="2.3" height="15.0" fill="rgb(236,117,11)" rx="2" ry="2" />
<text  x="973.29" y="447.5" ></text>
</g>
<g >
<title>exec_binprm (2 samples, 0.07%)</title><rect x="1084.6" y="453" width="0.8" height="15.0" fill="rgb(209,180,11)" rx="2" ry="2" />
<text  x="1087.59" y="463.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.20%)</title><rect x="974.9" y="341" width="2.3" height="15.0" fill="rgb(235,0,44)" rx="2" ry="2" />
<text  x="977.93" y="351.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.03%)</title><rect x="957.6" y="373" width="0.3" height="15.0" fill="rgb(248,30,36)" rx="2" ry="2" />
<text  x="960.55" y="383.5" ></text>
</g>
<g >
<title>load_elf_binary (2 samples, 0.07%)</title><rect x="1084.6" y="437" width="0.8" height="15.0" fill="rgb(242,175,12)" rx="2" ry="2" />
<text  x="1087.59" y="447.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (44 samples, 1.44%)</title><rect x="1132.1" y="533" width="17.0" height="15.0" fill="rgb(209,223,31)" rx="2" ry="2" />
<text  x="1135.08" y="543.5" ></text>
</g>
<g >
<title>unlock_buffer (1 samples, 0.03%)</title><rect x="957.6" y="181" width="0.3" height="15.0" fill="rgb(238,20,15)" rx="2" ry="2" />
<text  x="960.55" y="191.5" ></text>
</g>
<g >
<title>_int_free (21 samples, 0.69%)</title><rect x="31.6" y="453" width="8.1" height="15.0" fill="rgb(235,15,12)" rx="2" ry="2" />
<text  x="34.62" y="463.5" ></text>
</g>
<g >
<title>__mpn_mul (1 samples, 0.03%)</title><rect x="312.7" y="469" width="0.4" height="15.0" fill="rgb(238,89,29)" rx="2" ry="2" />
<text  x="315.72" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="959.1" y="373" width="0.4" height="15.0" fill="rgb(231,12,12)" rx="2" ry="2" />
<text  x="962.10" y="383.5" ></text>
</g>
<g >
<title>_exit (1 samples, 0.03%)</title><rect x="1150.6" y="533" width="0.4" height="15.0" fill="rgb(208,163,31)" rx="2" ry="2" />
<text  x="1153.62" y="543.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="1150.6" y="405" width="0.4" height="15.0" fill="rgb(251,150,12)" rx="2" ry="2" />
<text  x="1153.62" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1036.3" y="485" width="0.8" height="15.0" fill="rgb(239,139,1)" rx="2" ry="2" />
<text  x="1039.32" y="495.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="961.4" y="389" width="0.4" height="15.0" fill="rgb(210,113,34)" rx="2" ry="2" />
<text  x="964.41" y="399.5" ></text>
</g>
<g >
<title>finish_task_switch (33 samples, 1.08%)</title><rect x="1057.9" y="469" width="12.8" height="15.0" fill="rgb(215,165,8)" rx="2" ry="2" />
<text  x="1060.95" y="479.5" ></text>
</g>
<g >
<title>ext4_put_io_end_defer (1 samples, 0.03%)</title><rect x="1070.3" y="117" width="0.4" height="15.0" fill="rgb(236,80,17)" rx="2" ry="2" />
<text  x="1073.30" y="127.5" ></text>
</g>
<g >
<title>tty_write (6 samples, 0.20%)</title><rect x="1034.0" y="405" width="2.3" height="15.0" fill="rgb(221,199,14)" rx="2" ry="2" />
<text  x="1037.01" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.20%)</title><rect x="974.9" y="357" width="2.3" height="15.0" fill="rgb(208,171,54)" rx="2" ry="2" />
<text  x="977.93" y="367.5" ></text>
</g>
<g >
<title>__wake_up_bit (1 samples, 0.03%)</title><rect x="957.6" y="149" width="0.3" height="15.0" fill="rgb(216,60,7)" rx="2" ry="2" />
<text  x="960.55" y="159.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.03%)</title><rect x="1034.8" y="213" width="0.4" height="15.0" fill="rgb(218,9,36)" rx="2" ry="2" />
<text  x="1037.78" y="223.5" ></text>
</g>
<g >
<title>__pm_runtime_suspend (1 samples, 0.03%)</title><rect x="957.2" y="309" width="0.4" height="15.0" fill="rgb(214,50,13)" rx="2" ry="2" />
<text  x="960.17" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="961.4" y="437" width="0.4" height="15.0" fill="rgb(239,90,33)" rx="2" ry="2" />
<text  x="964.41" y="447.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (15 samples, 0.49%)</title><rect x="961.8" y="469" width="5.8" height="15.0" fill="rgb(230,162,46)" rx="2" ry="2" />
<text  x="964.80" y="479.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.03%)</title><rect x="1156.8" y="437" width="0.4" height="15.0" fill="rgb(219,18,41)" rx="2" ry="2" />
<text  x="1159.79" y="447.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.03%)</title><rect x="959.1" y="341" width="0.4" height="15.0" fill="rgb(215,45,18)" rx="2" ry="2" />
<text  x="962.10" y="351.5" ></text>
</g>
<g >
<title>amdgpu_ih_process (1 samples, 0.03%)</title><rect x="957.2" y="373" width="0.4" height="15.0" fill="rgb(252,60,2)" rx="2" ry="2" />
<text  x="960.17" y="383.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (15 samples, 0.49%)</title><rect x="961.8" y="437" width="5.8" height="15.0" fill="rgb(231,137,48)" rx="2" ry="2" />
<text  x="964.80" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.03%)</title><rect x="1160.3" y="533" width="0.4" height="15.0" fill="rgb(233,109,45)" rx="2" ry="2" />
<text  x="1163.27" y="543.5" ></text>
</g>
<g >
<title>pty_write (2 samples, 0.07%)</title><rect x="1035.5" y="357" width="0.8" height="15.0" fill="rgb(252,91,12)" rx="2" ry="2" />
<text  x="1038.55" y="367.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.03%)</title><rect x="960.6" y="325" width="0.4" height="15.0" fill="rgb(246,228,46)" rx="2" ry="2" />
<text  x="963.64" y="335.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="969.9" y="469" width="0.4" height="15.0" fill="rgb(248,40,48)" rx="2" ry="2" />
<text  x="972.91" y="479.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;double&gt; (2 samples, 0.07%)</title><rect x="76.0" y="485" width="0.8" height="15.0" fill="rgb(240,89,50)" rx="2" ry="2" />
<text  x="79.03" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.03%)</title><rect x="962.6" y="325" width="0.4" height="15.0" fill="rgb(228,7,54)" rx="2" ry="2" />
<text  x="965.57" y="335.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="1085.0" y="373" width="0.4" height="15.0" fill="rgb(218,49,42)" rx="2" ry="2" />
<text  x="1087.97" y="383.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.07%)</title><rect x="957.2" y="453" width="0.7" height="15.0" fill="rgb(219,222,14)" rx="2" ry="2" />
<text  x="960.17" y="463.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.03%)</title><rect x="961.0" y="373" width="0.4" height="15.0" fill="rgb(240,161,33)" rx="2" ry="2" />
<text  x="964.03" y="383.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.26%)</title><rect x="1033.2" y="453" width="3.1" height="15.0" fill="rgb(222,84,30)" rx="2" ry="2" />
<text  x="1036.23" y="463.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="962.6" y="405" width="0.4" height="15.0" fill="rgb(244,33,53)" rx="2" ry="2" />
<text  x="965.57" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_futex (24 samples, 0.79%)</title><rect x="970.3" y="469" width="9.3" height="15.0" fill="rgb(229,201,9)" rx="2" ry="2" />
<text  x="973.29" y="479.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.03%)</title><rect x="960.6" y="341" width="0.4" height="15.0" fill="rgb(239,183,39)" rx="2" ry="2" />
<text  x="963.64" y="351.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (15 samples, 0.49%)</title><rect x="961.8" y="453" width="5.8" height="15.0" fill="rgb(213,66,5)" rx="2" ry="2" />
<text  x="964.80" y="463.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;double&gt; (1 samples, 0.03%)</title><rect x="1122.4" y="485" width="0.4" height="15.0" fill="rgb(231,25,1)" rx="2" ry="2" />
<text  x="1125.43" y="495.5" ></text>
</g>
<g >
<title>Utility::InitializeArray (173 samples, 5.66%)</title><rect x="10.0" y="501" width="66.8" height="15.0" fill="rgb(205,39,49)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >Utility..</text>
</g>
<g >
<title>schedule (12 samples, 0.39%)</title><rect x="974.9" y="405" width="4.7" height="15.0" fill="rgb(226,0,37)" rx="2" ry="2" />
<text  x="977.93" y="415.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.03%)</title><rect x="960.3" y="341" width="0.3" height="15.0" fill="rgb(207,102,44)" rx="2" ry="2" />
<text  x="963.26" y="351.5" ></text>
</g>
<g >
<title>dl_main (2 samples, 0.07%)</title><rect x="1080.0" y="501" width="0.7" height="15.0" fill="rgb(244,50,12)" rx="2" ry="2" />
<text  x="1082.95" y="511.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.03%)</title><rect x="304.6" y="389" width="0.4" height="15.0" fill="rgb(236,135,51)" rx="2" ry="2" />
<text  x="307.61" y="399.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.03%)</title><rect x="1070.3" y="341" width="0.4" height="15.0" fill="rgb(228,217,52)" rx="2" ry="2" />
<text  x="1073.30" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="76.8" y="485" width="0.8" height="15.0" fill="rgb(220,118,43)" rx="2" ry="2" />
<text  x="79.80" y="495.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (2 samples, 0.07%)</title><rect x="1034.8" y="325" width="0.7" height="15.0" fill="rgb(209,125,53)" rx="2" ry="2" />
<text  x="1037.78" y="335.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (32 samples, 1.05%)</title><rect x="1110.1" y="517" width="12.3" height="15.0" fill="rgb(228,2,4)" rx="2" ry="2" />
<text  x="1113.07" y="527.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.03%)</title><rect x="969.9" y="437" width="0.4" height="15.0" fill="rgb(235,227,44)" rx="2" ry="2" />
<text  x="972.91" y="447.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (2 samples, 0.07%)</title><rect x="1084.6" y="469" width="0.8" height="15.0" fill="rgb(239,186,43)" rx="2" ry="2" />
<text  x="1087.59" y="479.5" ></text>
</g>
<g >
<title>gfx_v9_0_eop_irq (1 samples, 0.03%)</title><rect x="957.2" y="341" width="0.4" height="15.0" fill="rgb(214,130,49)" rx="2" ry="2" />
<text  x="960.17" y="351.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.03%)</title><rect x="958.7" y="389" width="0.4" height="15.0" fill="rgb(233,12,36)" rx="2" ry="2" />
<text  x="961.71" y="399.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (23 samples, 0.75%)</title><rect x="1101.2" y="517" width="8.9" height="15.0" fill="rgb(238,95,27)" rx="2" ry="2" />
<text  x="1104.19" y="527.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.03%)</title><rect x="76.8" y="357" width="0.4" height="15.0" fill="rgb(232,76,48)" rx="2" ry="2" />
<text  x="79.80" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="960.6" y="421" width="0.4" height="15.0" fill="rgb(227,162,46)" rx="2" ry="2" />
<text  x="963.64" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.98%)</title><rect x="968.0" y="485" width="11.6" height="15.0" fill="rgb(221,132,5)" rx="2" ry="2" />
<text  x="970.98" y="495.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.03%)</title><rect x="1035.2" y="197" width="0.3" height="15.0" fill="rgb(212,186,6)" rx="2" ry="2" />
<text  x="1038.16" y="207.5" ></text>
</g>
<g >
<title>wake_bit_function (1 samples, 0.03%)</title><rect x="957.6" y="85" width="0.3" height="15.0" fill="rgb(252,41,26)" rx="2" ry="2" />
<text  x="960.55" y="95.5" ></text>
</g>
<g >
<title>OMP::Solve (2 samples, 0.07%)</title><rect x="313.1" y="517" width="0.8" height="15.0" fill="rgb(218,194,39)" rx="2" ry="2" />
<text  x="316.11" y="527.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (1 samples, 0.03%)</title><rect x="959.5" y="357" width="0.4" height="15.0" fill="rgb(222,44,31)" rx="2" ry="2" />
<text  x="962.48" y="367.5" ></text>
</g>
<g >
<title>ompge (3,056 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(247,42,4)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >ompge</text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="76.8" y="405" width="0.4" height="15.0" fill="rgb(213,64,17)" rx="2" ry="2" />
<text  x="79.80" y="415.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="961.0" y="405" width="0.4" height="15.0" fill="rgb(208,176,51)" rx="2" ry="2" />
<text  x="964.03" y="415.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.03%)</title><rect x="1070.3" y="261" width="0.4" height="15.0" fill="rgb(249,204,50)" rx="2" ry="2" />
<text  x="1073.30" y="271.5" ></text>
</g>
<g >
<title>insert_work (2 samples, 0.07%)</title><rect x="1035.5" y="293" width="0.8" height="15.0" fill="rgb(209,105,11)" rx="2" ry="2" />
<text  x="1038.55" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (4 samples, 0.13%)</title><rect x="979.6" y="517" width="1.5" height="15.0" fill="rgb(226,91,33)" rx="2" ry="2" />
<text  x="982.56" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="1091.5" y="501" width="1.2" height="15.0" fill="rgb(233,116,13)" rx="2" ry="2" />
<text  x="1094.54" y="511.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.03%)</title><rect x="1011.2" y="245" width="0.4" height="15.0" fill="rgb(241,47,45)" rx="2" ry="2" />
<text  x="1014.22" y="255.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.03%)</title><rect x="1156.8" y="469" width="0.4" height="15.0" fill="rgb(220,221,41)" rx="2" ry="2" />
<text  x="1159.79" y="479.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.07%)</title><rect x="1034.8" y="229" width="0.7" height="15.0" fill="rgb(236,200,30)" rx="2" ry="2" />
<text  x="1037.78" y="239.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.03%)</title><rect x="962.6" y="357" width="0.4" height="15.0" fill="rgb(244,217,13)" rx="2" ry="2" />
<text  x="965.57" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.20%)</title><rect x="974.9" y="325" width="2.3" height="15.0" fill="rgb(238,139,9)" rx="2" ry="2" />
<text  x="977.93" y="335.5" ></text>
</g>
<g >
<title>put_task_stack (1 samples, 0.03%)</title><rect x="977.2" y="357" width="0.4" height="15.0" fill="rgb(219,161,1)" rx="2" ry="2" />
<text  x="980.24" y="367.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.03%)</title><rect x="1033.6" y="421" width="0.4" height="15.0" fill="rgb(205,82,24)" rx="2" ry="2" />
<text  x="1036.62" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1011.2" y="453" width="0.4" height="15.0" fill="rgb(224,172,49)" rx="2" ry="2" />
<text  x="1014.22" y="463.5" ></text>
</g>
<g >
<title>kernfs_dir_pos (1 samples, 0.03%)</title><rect x="1149.1" y="421" width="0.4" height="15.0" fill="rgb(246,27,51)" rx="2" ry="2" />
<text  x="1152.07" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.16%)</title><rect x="1158.0" y="421" width="1.9" height="15.0" fill="rgb(210,212,36)" rx="2" ry="2" />
<text  x="1160.95" y="431.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.10%)</title><rect x="1091.5" y="453" width="1.2" height="15.0" fill="rgb(222,214,50)" rx="2" ry="2" />
<text  x="1094.54" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.23%)</title><rect x="1157.6" y="469" width="2.7" height="15.0" fill="rgb(237,22,50)" rx="2" ry="2" />
<text  x="1160.57" y="479.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="305.8" y="389" width="0.4" height="15.0" fill="rgb(219,111,16)" rx="2" ry="2" />
<text  x="308.77" y="399.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.03%)</title><rect x="1070.3" y="213" width="0.4" height="15.0" fill="rgb(209,193,50)" rx="2" ry="2" />
<text  x="1073.30" y="223.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.03%)</title><rect x="957.6" y="341" width="0.3" height="15.0" fill="rgb(244,91,1)" rx="2" ry="2" />
<text  x="960.55" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="961.4" y="357" width="0.4" height="15.0" fill="rgb(229,70,45)" rx="2" ry="2" />
<text  x="964.41" y="367.5" ></text>
</g>
<g >
<title>ext4_end_bio (1 samples, 0.03%)</title><rect x="1070.3" y="133" width="0.4" height="15.0" fill="rgb(245,69,5)" rx="2" ry="2" />
<text  x="1073.30" y="143.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (12 samples, 0.39%)</title><rect x="974.9" y="421" width="4.7" height="15.0" fill="rgb(236,167,38)" rx="2" ry="2" />
<text  x="977.93" y="431.5" ></text>
</g>
<g >
<title>__strlen_avx2 (12 samples, 0.39%)</title><rect x="1075.3" y="517" width="4.7" height="15.0" fill="rgb(225,23,34)" rx="2" ry="2" />
<text  x="1078.32" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.03%)</title><rect x="1035.9" y="229" width="0.4" height="15.0" fill="rgb(245,211,17)" rx="2" ry="2" />
<text  x="1038.94" y="239.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.07%)</title><rect x="76.8" y="453" width="0.8" height="15.0" fill="rgb(254,91,30)" rx="2" ry="2" />
<text  x="79.80" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.03%)</title><rect x="957.6" y="101" width="0.3" height="15.0" fill="rgb(218,20,13)" rx="2" ry="2" />
<text  x="960.55" y="111.5" ></text>
</g>
<g >
<title>account_kernel_stack (1 samples, 0.03%)</title><rect x="977.2" y="341" width="0.4" height="15.0" fill="rgb(223,77,53)" rx="2" ry="2" />
<text  x="980.24" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.07%)</title><rect x="76.8" y="469" width="0.8" height="15.0" fill="rgb(224,122,22)" rx="2" ry="2" />
<text  x="79.80" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.03%)</title><rect x="967.6" y="501" width="0.4" height="15.0" fill="rgb(238,63,30)" rx="2" ry="2" />
<text  x="970.59" y="511.5" ></text>
</g>
<g >
<title>irq_work_single (1 samples, 0.03%)</title><rect x="1011.2" y="293" width="0.4" height="15.0" fill="rgb(241,154,21)" rx="2" ry="2" />
<text  x="1014.22" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1156.8" y="517" width="0.4" height="15.0" fill="rgb(239,52,49)" rx="2" ry="2" />
<text  x="1159.79" y="527.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.03%)</title><rect x="959.1" y="405" width="0.4" height="15.0" fill="rgb(216,52,3)" rx="2" ry="2" />
<text  x="962.10" y="415.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (1 samples, 0.03%)</title><rect x="1011.2" y="341" width="0.4" height="15.0" fill="rgb(243,111,19)" rx="2" ry="2" />
<text  x="1014.22" y="351.5" ></text>
</g>
<g >
<title>ksys_getdents64 (1 samples, 0.03%)</title><rect x="1149.1" y="469" width="0.4" height="15.0" fill="rgb(209,175,24)" rx="2" ry="2" />
<text  x="1152.07" y="479.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.03%)</title><rect x="1035.2" y="213" width="0.3" height="15.0" fill="rgb(216,47,39)" rx="2" ry="2" />
<text  x="1038.16" y="223.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.03%)</title><rect x="1035.5" y="245" width="0.4" height="15.0" fill="rgb(245,142,26)" rx="2" ry="2" />
<text  x="1038.55" y="255.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.07%)</title><rect x="76.8" y="517" width="0.8" height="15.0" fill="rgb(212,226,5)" rx="2" ry="2" />
<text  x="79.80" y="527.5" ></text>
</g>
<g >
<title>ReadLine (171 samples, 5.60%)</title><rect x="10.0" y="485" width="66.0" height="15.0" fill="rgb(249,220,28)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >ReadLine</text>
</g>
<g >
<title>operator delete (2 samples, 0.07%)</title><rect x="46.3" y="453" width="0.8" height="15.0" fill="rgb(216,104,54)" rx="2" ry="2" />
<text  x="49.30" y="463.5" ></text>
</g>
<g >
<title>all (3,056 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(206,58,50)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1122.4" y="501" width="0.4" height="15.0" fill="rgb(215,68,21)" rx="2" ry="2" />
<text  x="1125.43" y="511.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="1012.0" y="501" width="0.4" height="15.0" fill="rgb(223,138,2)" rx="2" ry="2" />
<text  x="1015.00" y="511.5" ></text>
</g>
<g >
<title>elf_map (1 samples, 0.03%)</title><rect x="1085.0" y="405" width="0.4" height="15.0" fill="rgb(247,76,19)" rx="2" ry="2" />
<text  x="1087.97" y="415.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.03%)</title><rect x="959.1" y="357" width="0.4" height="15.0" fill="rgb(252,9,36)" rx="2" ry="2" />
<text  x="962.10" y="367.5" ></text>
</g>
<g >
<title>kernfs_put (1 samples, 0.03%)</title><rect x="1149.1" y="405" width="0.4" height="15.0" fill="rgb(210,137,0)" rx="2" ry="2" />
<text  x="1152.07" y="415.5" ></text>
</g>
<g >
<title>pty_write (2 samples, 0.07%)</title><rect x="1034.8" y="341" width="0.7" height="15.0" fill="rgb(238,138,3)" rx="2" ry="2" />
<text  x="1037.78" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1011.2" y="437" width="0.4" height="15.0" fill="rgb(220,56,7)" rx="2" ry="2" />
<text  x="1014.22" y="447.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.03%)</title><rect x="957.6" y="389" width="0.3" height="15.0" fill="rgb(249,50,33)" rx="2" ry="2" />
<text  x="960.55" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="969.9" y="405" width="0.4" height="15.0" fill="rgb(226,68,8)" rx="2" ry="2" />
<text  x="972.91" y="415.5" ></text>
</g>
<g >
<title>memcpy (1 samples, 0.03%)</title><rect x="1085.0" y="277" width="0.4" height="15.0" fill="rgb(251,182,3)" rx="2" ry="2" />
<text  x="1087.97" y="287.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (8 samples, 0.26%)</title><rect x="1157.2" y="517" width="3.1" height="15.0" fill="rgb(240,185,45)" rx="2" ry="2" />
<text  x="1160.18" y="527.5" ></text>
</g>
<g >
<title>kprobe_flush_task (5 samples, 0.16%)</title><rect x="977.6" y="373" width="2.0" height="15.0" fill="rgb(247,193,13)" rx="2" ry="2" />
<text  x="980.63" y="383.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.03%)</title><rect x="1084.6" y="421" width="0.4" height="15.0" fill="rgb(219,127,26)" rx="2" ry="2" />
<text  x="1087.59" y="431.5" ></text>
</g>
<g >
<title>_do_fork (2 samples, 0.07%)</title><rect x="1036.3" y="437" width="0.8" height="15.0" fill="rgb(247,82,22)" rx="2" ry="2" />
<text  x="1039.32" y="447.5" ></text>
</g>
<g >
<title>sysvec_irq_work (1 samples, 0.03%)</title><rect x="960.6" y="373" width="0.4" height="15.0" fill="rgb(207,229,37)" rx="2" ry="2" />
<text  x="963.64" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.10%)</title><rect x="1091.5" y="421" width="1.2" height="15.0" fill="rgb(219,87,1)" rx="2" ry="2" />
<text  x="1094.54" y="431.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (6 samples, 0.20%)</title><rect x="73.7" y="469" width="2.3" height="15.0" fill="rgb(240,87,44)" rx="2" ry="2" />
<text  x="76.71" y="479.5" ></text>
</g>
<g >
<title>OMP::ForwardElimination (65 samples, 2.13%)</title><rect x="981.1" y="485" width="25.1" height="15.0" fill="rgb(211,15,22)" rx="2" ry="2" />
<text  x="984.11" y="495.5" >O..</text>
</g>
<g >
<title>std::string::reserve (4 samples, 0.13%)</title><rect x="70.6" y="453" width="1.6" height="15.0" fill="rgb(251,77,16)" rx="2" ry="2" />
<text  x="73.62" y="463.5" ></text>
</g>
<g >
<title>__sigsetjmp (1 samples, 0.03%)</title><rect x="1150.2" y="533" width="0.4" height="15.0" fill="rgb(211,187,17)" rx="2" ry="2" />
<text  x="1153.23" y="543.5" ></text>
</g>
<g >
<title>__clone (91 samples, 2.98%)</title><rect x="1036.3" y="517" width="35.2" height="15.0" fill="rgb(252,93,48)" rx="2" ry="2" />
<text  x="1039.32" y="527.5" >__..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.07%)</title><rect x="1057.2" y="437" width="0.7" height="15.0" fill="rgb(235,68,11)" rx="2" ry="2" />
<text  x="1060.17" y="447.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.03%)</title><rect x="969.9" y="421" width="0.4" height="15.0" fill="rgb(240,184,50)" rx="2" ry="2" />
<text  x="972.91" y="431.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.03%)</title><rect x="962.6" y="277" width="0.4" height="15.0" fill="rgb(224,30,4)" rx="2" ry="2" />
<text  x="965.57" y="287.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="962.6" y="421" width="0.4" height="15.0" fill="rgb(224,132,48)" rx="2" ry="2" />
<text  x="965.57" y="431.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.03%)</title><rect x="1011.2" y="309" width="0.4" height="15.0" fill="rgb(214,227,37)" rx="2" ry="2" />
<text  x="1014.22" y="319.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="959.1" y="389" width="0.4" height="15.0" fill="rgb(240,50,22)" rx="2" ry="2" />
<text  x="962.10" y="399.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="1156.8" y="389" width="0.4" height="15.0" fill="rgb(249,99,31)" rx="2" ry="2" />
<text  x="1159.79" y="399.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.07%)</title><rect x="76.8" y="437" width="0.8" height="15.0" fill="rgb(237,165,52)" rx="2" ry="2" />
<text  x="79.80" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (2 samples, 0.07%)</title><rect x="1124.7" y="517" width="0.8" height="15.0" fill="rgb(218,54,51)" rx="2" ry="2" />
<text  x="1127.74" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.03%)</title><rect x="1150.6" y="485" width="0.4" height="15.0" fill="rgb(215,182,8)" rx="2" ry="2" />
<text  x="1153.62" y="495.5" ></text>
</g>
<g >
<title>xas_load (1 samples, 0.03%)</title><rect x="1092.3" y="325" width="0.4" height="15.0" fill="rgb(250,196,52)" rx="2" ry="2" />
<text  x="1095.31" y="335.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (1 samples, 0.03%)</title><rect x="305.4" y="485" width="0.4" height="15.0" fill="rgb(227,59,3)" rx="2" ry="2" />
<text  x="308.39" y="495.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.03%)</title><rect x="77.2" y="373" width="0.4" height="15.0" fill="rgb(253,68,22)" rx="2" ry="2" />
<text  x="80.19" y="383.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (15 samples, 0.49%)</title><rect x="961.8" y="485" width="5.8" height="15.0" fill="rgb(218,181,22)" rx="2" ry="2" />
<text  x="964.80" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1070.3" y="277" width="0.4" height="15.0" fill="rgb(229,199,44)" rx="2" ry="2" />
<text  x="1073.30" y="287.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="961.0" y="389" width="0.4" height="15.0" fill="rgb(253,213,22)" rx="2" ry="2" />
<text  x="964.03" y="399.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.03%)</title><rect x="1085.0" y="341" width="0.4" height="15.0" fill="rgb(238,15,38)" rx="2" ry="2" />
<text  x="1087.97" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.26%)</title><rect x="1033.2" y="485" width="3.1" height="15.0" fill="rgb(249,194,16)" rx="2" ry="2" />
<text  x="1036.23" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="957.6" y="117" width="0.3" height="15.0" fill="rgb(249,172,43)" rx="2" ry="2" />
<text  x="960.55" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8 samples, 0.26%)</title><rect x="957.9" y="485" width="3.1" height="15.0" fill="rgb(244,140,54)" rx="2" ry="2" />
<text  x="960.94" y="495.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.03%)</title><rect x="1011.6" y="453" width="0.4" height="15.0" fill="rgb(229,113,51)" rx="2" ry="2" />
<text  x="1014.61" y="463.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.03%)</title><rect x="1070.3" y="245" width="0.4" height="15.0" fill="rgb(226,150,19)" rx="2" ry="2" />
<text  x="1073.30" y="255.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="1151.0" y="501" width="0.4" height="15.0" fill="rgb(207,121,28)" rx="2" ry="2" />
<text  x="1154.00" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.07%)</title><rect x="959.5" y="405" width="0.8" height="15.0" fill="rgb(249,168,45)" rx="2" ry="2" />
<text  x="962.48" y="415.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.03%)</title><rect x="1151.0" y="469" width="0.4" height="15.0" fill="rgb(253,83,3)" rx="2" ry="2" />
<text  x="1154.00" y="479.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="960.3" y="405" width="0.3" height="15.0" fill="rgb(245,149,45)" rx="2" ry="2" />
<text  x="963.26" y="415.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (2 samples, 0.07%)</title><rect x="1035.5" y="341" width="0.8" height="15.0" fill="rgb(216,80,2)" rx="2" ry="2" />
<text  x="1038.55" y="351.5" ></text>
</g>
<g >
<title>dbs_irq_work (1 samples, 0.03%)</title><rect x="1011.2" y="277" width="0.4" height="15.0" fill="rgb(246,59,7)" rx="2" ry="2" />
<text  x="1014.22" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.07%)</title><rect x="959.5" y="389" width="0.8" height="15.0" fill="rgb(232,47,52)" rx="2" ry="2" />
<text  x="962.48" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.23%)</title><rect x="1067.6" y="453" width="2.7" height="15.0" fill="rgb(231,45,32)" rx="2" ry="2" />
<text  x="1070.60" y="463.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.10%)</title><rect x="1091.5" y="389" width="1.2" height="15.0" fill="rgb(233,60,42)" rx="2" ry="2" />
<text  x="1094.54" y="399.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (1 samples, 0.03%)</title><rect x="960.3" y="453" width="0.3" height="15.0" fill="rgb(225,59,42)" rx="2" ry="2" />
<text  x="963.26" y="463.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 0.33%)</title><rect x="1080.7" y="517" width="3.9" height="15.0" fill="rgb(243,40,6)" rx="2" ry="2" />
<text  x="1083.73" y="527.5" ></text>
</g>
<g >
<title>iterate_dir (1 samples, 0.03%)</title><rect x="1149.1" y="453" width="0.4" height="15.0" fill="rgb(247,3,0)" rx="2" ry="2" />
<text  x="1152.07" y="463.5" ></text>
</g>
<g >
<title>invoke_rcu_core (1 samples, 0.03%)</title><rect x="959.5" y="341" width="0.4" height="15.0" fill="rgb(218,221,4)" rx="2" ry="2" />
<text  x="962.48" y="351.5" ></text>
</g>
<g >
<title>__pthread_once (1 samples, 0.03%)</title><rect x="31.2" y="453" width="0.4" height="15.0" fill="rgb(238,67,22)" rx="2" ry="2" />
<text  x="34.24" y="463.5" ></text>
</g>
<g >
<title>std::__num_base::_S_format_float (1 samples, 0.03%)</title><rect x="1122.4" y="469" width="0.4" height="15.0" fill="rgb(217,227,47)" rx="2" ry="2" />
<text  x="1125.43" y="479.5" ></text>
</g>
<g >
<title>sysvec_irq_work (1 samples, 0.03%)</title><rect x="1011.2" y="357" width="0.4" height="15.0" fill="rgb(222,52,45)" rx="2" ry="2" />
<text  x="1014.22" y="367.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="1084.6" y="373" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1087.59" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="961.4" y="485" width="0.4" height="15.0" fill="rgb(234,178,53)" rx="2" ry="2" />
<text  x="964.41" y="495.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="960.3" y="437" width="0.3" height="15.0" fill="rgb(240,204,53)" rx="2" ry="2" />
<text  x="963.26" y="447.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1011.2" y="421" width="0.4" height="15.0" fill="rgb(240,226,2)" rx="2" ry="2" />
<text  x="1014.22" y="431.5" ></text>
</g>
<g >
<title>dbs_irq_work (1 samples, 0.03%)</title><rect x="960.6" y="293" width="0.4" height="15.0" fill="rgb(236,219,24)" rx="2" ry="2" />
<text  x="963.64" y="303.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.03%)</title><rect x="957.6" y="229" width="0.3" height="15.0" fill="rgb(205,19,43)" rx="2" ry="2" />
<text  x="960.55" y="239.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.03%)</title><rect x="305.4" y="437" width="0.4" height="15.0" fill="rgb(210,63,40)" rx="2" ry="2" />
<text  x="308.39" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.07%)</title><rect x="304.6" y="437" width="0.8" height="15.0" fill="rgb(244,44,25)" rx="2" ry="2" />
<text  x="307.61" y="447.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.03%)</title><rect x="960.6" y="261" width="0.4" height="15.0" fill="rgb(205,75,5)" rx="2" ry="2" />
<text  x="963.64" y="271.5" ></text>
</g>
<g >
<title>blk_mq_force_complete_rq (1 samples, 0.03%)</title><rect x="957.6" y="357" width="0.3" height="15.0" fill="rgb(222,63,43)" rx="2" ry="2" />
<text  x="960.55" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1151.0" y="437" width="0.4" height="15.0" fill="rgb(219,76,52)" rx="2" ry="2" />
<text  x="1154.00" y="447.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="305.8" y="469" width="0.4" height="15.0" fill="rgb(225,116,2)" rx="2" ry="2" />
<text  x="308.77" y="479.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.07%)</title><rect x="304.6" y="405" width="0.8" height="15.0" fill="rgb(219,165,11)" rx="2" ry="2" />
<text  x="307.61" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1011.2" y="389" width="0.4" height="15.0" fill="rgb(208,88,29)" rx="2" ry="2" />
<text  x="1014.22" y="399.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.03%)</title><rect x="1011.2" y="325" width="0.4" height="15.0" fill="rgb(238,207,53)" rx="2" ry="2" />
<text  x="1014.22" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.07%)</title><rect x="1091.5" y="357" width="0.8" height="15.0" fill="rgb(220,72,8)" rx="2" ry="2" />
<text  x="1094.54" y="367.5" ></text>
</g>
<g >
<title>blk_mq_end_request (1 samples, 0.03%)</title><rect x="957.6" y="309" width="0.3" height="15.0" fill="rgb(218,21,20)" rx="2" ry="2" />
<text  x="960.55" y="319.5" ></text>
</g>
<g >
<title>Parallel::Solve (175 samples, 5.73%)</title><rect x="10.0" y="533" width="67.6" height="15.0" fill="rgb(225,198,26)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >Paralle..</text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.10%)</title><rect x="1091.5" y="469" width="1.2" height="15.0" fill="rgb(215,197,23)" rx="2" ry="2" />
<text  x="1094.54" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1011.6" y="485" width="0.4" height="15.0" fill="rgb(252,152,29)" rx="2" ry="2" />
<text  x="1014.61" y="495.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.13%)</title><rect x="1090.0" y="517" width="1.5" height="15.0" fill="rgb(226,175,30)" rx="2" ry="2" />
<text  x="1092.99" y="527.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.03%)</title><rect x="1159.9" y="421" width="0.4" height="15.0" fill="rgb(223,113,6)" rx="2" ry="2" />
<text  x="1162.88" y="431.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.03%)</title><rect x="957.6" y="133" width="0.3" height="15.0" fill="rgb(223,94,0)" rx="2" ry="2" />
<text  x="960.55" y="143.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1151.0" y="421" width="0.4" height="15.0" fill="rgb(245,185,53)" rx="2" ry="2" />
<text  x="1154.00" y="431.5" ></text>
</g>
<g >
<title>std::string::reserve (9 samples, 0.29%)</title><rect x="1125.5" y="517" width="3.5" height="15.0" fill="rgb(235,119,53)" rx="2" ry="2" />
<text  x="1128.52" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.03%)</title><rect x="1070.3" y="293" width="0.4" height="15.0" fill="rgb(226,66,20)" rx="2" ry="2" />
<text  x="1073.30" y="303.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (2 samples, 0.07%)</title><rect x="312.3" y="517" width="0.8" height="15.0" fill="rgb(212,46,43)" rx="2" ry="2" />
<text  x="315.34" y="527.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="305.8" y="373" width="0.4" height="15.0" fill="rgb(244,224,16)" rx="2" ry="2" />
<text  x="308.77" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2,121 samples, 69.40%)</title><rect x="313.1" y="533" width="819.0" height="15.0" fill="rgb(221,142,32)" rx="2" ry="2" />
<text  x="316.11" y="543.5" >[unknown]</text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.07%)</title><rect x="1080.0" y="517" width="0.7" height="15.0" fill="rgb(239,54,40)" rx="2" ry="2" />
<text  x="1082.95" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.03%)</title><rect x="960.3" y="373" width="0.3" height="15.0" fill="rgb(235,178,39)" rx="2" ry="2" />
<text  x="963.26" y="383.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.03%)</title><rect x="962.6" y="293" width="0.4" height="15.0" fill="rgb(229,221,52)" rx="2" ry="2" />
<text  x="965.57" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1084.6" y="501" width="0.8" height="15.0" fill="rgb(213,84,24)" rx="2" ry="2" />
<text  x="1087.59" y="511.5" ></text>
</g>
<g >
<title>switch_fpu_return (1 samples, 0.03%)</title><rect x="1071.1" y="437" width="0.4" height="15.0" fill="rgb(243,116,13)" rx="2" ry="2" />
<text  x="1074.07" y="447.5" ></text>
</g>
<g >
<title>amdgpu_irq_handler (1 samples, 0.03%)</title><rect x="957.2" y="389" width="0.4" height="15.0" fill="rgb(233,38,16)" rx="2" ry="2" />
<text  x="960.17" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.07%)</title><rect x="957.2" y="421" width="0.7" height="15.0" fill="rgb(216,23,54)" rx="2" ry="2" />
<text  x="960.17" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.03%)</title><rect x="961.0" y="485" width="0.4" height="15.0" fill="rgb(231,12,34)" rx="2" ry="2" />
<text  x="964.03" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1070.3" y="437" width="0.4" height="15.0" fill="rgb(211,151,17)" rx="2" ry="2" />
<text  x="1073.30" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="961.4" y="469" width="0.4" height="15.0" fill="rgb(217,144,40)" rx="2" ry="2" />
<text  x="964.41" y="479.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="960.6" y="437" width="0.4" height="15.0" fill="rgb(233,209,1)" rx="2" ry="2" />
<text  x="963.64" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (7 samples, 0.23%)</title><rect x="1067.6" y="437" width="2.7" height="15.0" fill="rgb(221,52,9)" rx="2" ry="2" />
<text  x="1070.60" y="447.5" ></text>
</g>
<g >
<title>mmap64 (1 samples, 0.03%)</title><rect x="1156.8" y="533" width="0.4" height="15.0" fill="rgb(234,109,12)" rx="2" ry="2" />
<text  x="1159.79" y="543.5" ></text>
</g>
<g >
<title>futex_wait (18 samples, 0.59%)</title><rect x="972.6" y="437" width="7.0" height="15.0" fill="rgb(223,191,47)" rx="2" ry="2" />
<text  x="975.61" y="447.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.39%)</title><rect x="1085.4" y="517" width="4.6" height="15.0" fill="rgb(247,32,46)" rx="2" ry="2" />
<text  x="1088.36" y="527.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_float (65 samples, 2.13%)</title><rect x="1160.7" y="533" width="25.1" height="15.0" fill="rgb(227,114,1)" rx="2" ry="2" />
<text  x="1163.65" y="543.5" >s..</text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.03%)</title><rect x="962.6" y="389" width="0.4" height="15.0" fill="rgb(239,74,18)" rx="2" ry="2" />
<text  x="965.57" y="399.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.20%)</title><rect x="1034.0" y="421" width="2.3" height="15.0" fill="rgb(218,39,38)" rx="2" ry="2" />
<text  x="1037.01" y="431.5" ></text>
</g>
<g >
<title>file_path (1 samples, 0.03%)</title><rect x="1085.0" y="309" width="0.4" height="15.0" fill="rgb(210,223,48)" rx="2" ry="2" />
<text  x="1087.97" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1156.8" y="501" width="0.4" height="15.0" fill="rgb(206,5,38)" rx="2" ry="2" />
<text  x="1159.79" y="511.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.03%)</title><rect x="77.2" y="357" width="0.4" height="15.0" fill="rgb(234,221,48)" rx="2" ry="2" />
<text  x="80.19" y="367.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.03%)</title><rect x="1035.9" y="213" width="0.4" height="15.0" fill="rgb(222,10,34)" rx="2" ry="2" />
<text  x="1038.94" y="223.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.03%)</title><rect x="960.6" y="277" width="0.4" height="15.0" fill="rgb(233,216,23)" rx="2" ry="2" />
<text  x="963.64" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1149.1" y="517" width="0.4" height="15.0" fill="rgb(228,108,40)" rx="2" ry="2" />
<text  x="1152.07" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.07%)</title><rect x="304.6" y="453" width="0.8" height="15.0" fill="rgb(239,48,42)" rx="2" ry="2" />
<text  x="307.61" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.03%)</title><rect x="1070.3" y="309" width="0.4" height="15.0" fill="rgb(221,34,3)" rx="2" ry="2" />
<text  x="1073.30" y="319.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.07%)</title><rect x="1035.5" y="277" width="0.8" height="15.0" fill="rgb(213,29,41)" rx="2" ry="2" />
<text  x="1038.55" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5 samples, 0.16%)</title><rect x="958.3" y="453" width="2.0" height="15.0" fill="rgb(213,27,31)" rx="2" ry="2" />
<text  x="961.32" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="1036.3" y="501" width="0.8" height="15.0" fill="rgb(224,78,17)" rx="2" ry="2" />
<text  x="1039.32" y="511.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.03%)</title><rect x="958.7" y="405" width="0.4" height="15.0" fill="rgb(224,57,45)" rx="2" ry="2" />
<text  x="961.71" y="415.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="305.8" y="485" width="0.4" height="15.0" fill="rgb(218,57,52)" rx="2" ry="2" />
<text  x="308.77" y="495.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (5 samples, 0.16%)</title><rect x="1122.8" y="517" width="1.9" height="15.0" fill="rgb(241,146,53)" rx="2" ry="2" />
<text  x="1125.81" y="527.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (6 samples, 0.20%)</title><rect x="972.6" y="405" width="2.3" height="15.0" fill="rgb(240,19,31)" rx="2" ry="2" />
<text  x="975.61" y="415.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_float (11 samples, 0.36%)</title><rect x="52.1" y="453" width="4.2" height="15.0" fill="rgb(212,219,52)" rx="2" ry="2" />
<text  x="55.09" y="463.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (17 samples, 0.56%)</title><rect x="39.7" y="453" width="6.6" height="15.0" fill="rgb(244,109,7)" rx="2" ry="2" />
<text  x="42.73" y="463.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="969.9" y="453" width="0.4" height="15.0" fill="rgb(217,151,20)" rx="2" ry="2" />
<text  x="972.91" y="463.5" ></text>
</g>
<g >
<title>Parallel::OmpSolve (173 samples, 5.66%)</title><rect x="10.0" y="517" width="66.8" height="15.0" fill="rgb(206,187,24)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >Paralle..</text>
</g>
<g >
<title>nvme_complete_rq (1 samples, 0.03%)</title><rect x="957.6" y="325" width="0.3" height="15.0" fill="rgb(250,87,21)" rx="2" ry="2" />
<text  x="960.55" y="335.5" ></text>
</g>
<g >
<title>blk_mq_force_complete_rq (1 samples, 0.03%)</title><rect x="1070.3" y="229" width="0.4" height="15.0" fill="rgb(212,20,31)" rx="2" ry="2" />
<text  x="1073.30" y="239.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.03%)</title><rect x="961.0" y="357" width="0.4" height="15.0" fill="rgb(224,218,35)" rx="2" ry="2" />
<text  x="964.03" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.03%)</title><rect x="1156.8" y="485" width="0.4" height="15.0" fill="rgb(252,40,4)" rx="2" ry="2" />
<text  x="1159.79" y="495.5" ></text>
</g>
<g >
<title>__GI___getdents64 (1 samples, 0.03%)</title><rect x="1149.1" y="533" width="0.4" height="15.0" fill="rgb(231,203,6)" rx="2" ry="2" />
<text  x="1152.07" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="305.8" y="437" width="0.4" height="15.0" fill="rgb(211,155,28)" rx="2" ry="2" />
<text  x="308.77" y="447.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.03%)</title><rect x="1092.3" y="341" width="0.4" height="15.0" fill="rgb(205,166,19)" rx="2" ry="2" />
<text  x="1095.31" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="76.8" y="501" width="0.8" height="15.0" fill="rgb(243,172,29)" rx="2" ry="2" />
<text  x="79.80" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="960.6" y="197" width="0.4" height="15.0" fill="rgb(210,150,34)" rx="2" ry="2" />
<text  x="963.64" y="207.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.03%)</title><rect x="77.2" y="389" width="0.4" height="15.0" fill="rgb(248,150,29)" rx="2" ry="2" />
<text  x="80.19" y="399.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.03%)</title><rect x="1034.8" y="197" width="0.4" height="15.0" fill="rgb(233,102,6)" rx="2" ry="2" />
<text  x="1037.78" y="207.5" ></text>
</g>
<g >
<title>zap_other_threads (1 samples, 0.03%)</title><rect x="1150.6" y="453" width="0.4" height="15.0" fill="rgb(221,10,43)" rx="2" ry="2" />
<text  x="1153.62" y="463.5" ></text>
</g>
<g >
<title>journal_end_buffer_io_sync (1 samples, 0.03%)</title><rect x="957.6" y="197" width="0.3" height="15.0" fill="rgb(211,222,28)" rx="2" ry="2" />
<text  x="960.55" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.98%)</title><rect x="968.0" y="501" width="11.6" height="15.0" fill="rgb(241,49,51)" rx="2" ry="2" />
<text  x="970.98" y="511.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.03%)</title><rect x="960.3" y="357" width="0.3" height="15.0" fill="rgb(239,159,31)" rx="2" ry="2" />
<text  x="963.26" y="367.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.03%)</title><rect x="962.6" y="309" width="0.4" height="15.0" fill="rgb(205,28,5)" rx="2" ry="2" />
<text  x="965.57" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1011.6" y="501" width="0.4" height="15.0" fill="rgb(229,95,28)" rx="2" ry="2" />
<text  x="1014.61" y="511.5" ></text>
</g>
<g >
<title>irq_work_single (1 samples, 0.03%)</title><rect x="960.6" y="309" width="0.4" height="15.0" fill="rgb(227,229,10)" rx="2" ry="2" />
<text  x="963.64" y="319.5" ></text>
</g>
<g >
<title>__mpn_construct_double (7 samples, 0.23%)</title><rect x="1071.5" y="517" width="2.7" height="15.0" fill="rgb(213,93,33)" rx="2" ry="2" />
<text  x="1074.46" y="527.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1070.3" y="405" width="0.4" height="15.0" fill="rgb(237,49,30)" rx="2" ry="2" />
<text  x="1073.30" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1149.1" y="501" width="0.4" height="15.0" fill="rgb(242,79,52)" rx="2" ry="2" />
<text  x="1152.07" y="511.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (3 samples, 0.10%)</title><rect x="1091.5" y="373" width="1.2" height="15.0" fill="rgb(214,197,7)" rx="2" ry="2" />
<text  x="1094.54" y="383.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="305.8" y="421" width="0.4" height="15.0" fill="rgb(221,88,34)" rx="2" ry="2" />
<text  x="308.77" y="431.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (37 samples, 1.21%)</title><rect x="56.3" y="453" width="14.3" height="15.0" fill="rgb(222,69,12)" rx="2" ry="2" />
<text  x="59.34" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.07%)</title><rect x="303.8" y="501" width="0.8" height="15.0" fill="rgb(215,200,41)" rx="2" ry="2" />
<text  x="306.84" y="511.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="1035.2" y="165" width="0.3" height="15.0" fill="rgb(251,21,0)" rx="2" ry="2" />
<text  x="1038.16" y="175.5" ></text>
</g>
<g >
<title>blk_mq_end_request (1 samples, 0.03%)</title><rect x="1070.3" y="181" width="0.4" height="15.0" fill="rgb(251,154,33)" rx="2" ry="2" />
<text  x="1073.30" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1 samples, 0.03%)</title><rect x="1149.1" y="485" width="0.4" height="15.0" fill="rgb(218,39,51)" rx="2" ry="2" />
<text  x="1152.07" y="495.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.07%)</title><rect x="1035.5" y="309" width="0.8" height="15.0" fill="rgb(240,72,32)" rx="2" ry="2" />
<text  x="1038.55" y="319.5" ></text>
</g>
<g >
<title>d_path (1 samples, 0.03%)</title><rect x="1085.0" y="293" width="0.4" height="15.0" fill="rgb(217,186,14)" rx="2" ry="2" />
<text  x="1087.97" y="303.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.03%)</title><rect x="1035.2" y="181" width="0.3" height="15.0" fill="rgb(220,133,29)" rx="2" ry="2" />
<text  x="1038.16" y="191.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (2 samples, 0.07%)</title><rect x="312.3" y="485" width="0.8" height="15.0" fill="rgb(242,132,15)" rx="2" ry="2" />
<text  x="315.34" y="495.5" ></text>
</g>
<g >
<title>wake_up_bit (1 samples, 0.03%)</title><rect x="957.6" y="165" width="0.3" height="15.0" fill="rgb(243,170,8)" rx="2" ry="2" />
<text  x="960.55" y="175.5" ></text>
</g>
<g >
<title>wake_up_state (1 samples, 0.03%)</title><rect x="1150.6" y="421" width="0.4" height="15.0" fill="rgb(236,84,10)" rx="2" ry="2" />
<text  x="1153.62" y="431.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="957.9" y="469" width="0.4" height="15.0" fill="rgb(230,86,6)" rx="2" ry="2" />
<text  x="960.94" y="479.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.07%)</title><rect x="957.2" y="485" width="0.7" height="15.0" fill="rgb(231,0,7)" rx="2" ry="2" />
<text  x="960.17" y="495.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="960.6" y="213" width="0.4" height="15.0" fill="rgb(237,98,30)" rx="2" ry="2" />
<text  x="963.64" y="223.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="305.4" y="469" width="0.4" height="15.0" fill="rgb(235,66,38)" rx="2" ry="2" />
<text  x="308.39" y="479.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.03%)</title><rect x="1035.2" y="149" width="0.3" height="15.0" fill="rgb(208,189,23)" rx="2" ry="2" />
<text  x="1038.16" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.26%)</title><rect x="1033.2" y="501" width="3.1" height="15.0" fill="rgb(244,29,31)" rx="2" ry="2" />
<text  x="1036.23" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.07%)</title><rect x="961.8" y="389" width="0.8" height="15.0" fill="rgb(225,22,9)" rx="2" ry="2" />
<text  x="964.80" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1150.6" y="501" width="0.4" height="15.0" fill="rgb(218,100,33)" rx="2" ry="2" />
<text  x="1153.62" y="511.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (2 samples, 0.07%)</title><rect x="47.1" y="453" width="0.7" height="15.0" fill="rgb(209,136,50)" rx="2" ry="2" />
<text  x="50.07" y="463.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="1070.3" y="357" width="0.4" height="15.0" fill="rgb(251,213,14)" rx="2" ry="2" />
<text  x="1073.30" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.03%)</title><rect x="76.8" y="341" width="0.4" height="15.0" fill="rgb(218,181,28)" rx="2" ry="2" />
<text  x="79.80" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1151.0" y="533" width="0.4" height="15.0" fill="rgb(223,155,40)" rx="2" ry="2" />
<text  x="1154.00" y="543.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;double&gt; (149 samples, 4.88%)</title><rect x="14.6" y="469" width="57.6" height="15.0" fill="rgb(207,147,18)" rx="2" ry="2" />
<text  x="17.63" y="479.5" >std::i..</text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.03%)</title><rect x="962.6" y="373" width="0.4" height="15.0" fill="rgb(254,40,36)" rx="2" ry="2" />
<text  x="965.57" y="383.5" ></text>
</g>
<g >
<title>do_signal (2 samples, 0.07%)</title><rect x="961.8" y="421" width="0.8" height="15.0" fill="rgb(212,129,5)" rx="2" ry="2" />
<text  x="964.80" y="431.5" ></text>
</g>
<g >
<title>load_elf_interp.isra.0 (1 samples, 0.03%)</title><rect x="1085.0" y="421" width="0.4" height="15.0" fill="rgb(208,174,53)" rx="2" ry="2" />
<text  x="1087.97" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.07%)</title><rect x="304.6" y="469" width="0.8" height="15.0" fill="rgb(249,21,0)" rx="2" ry="2" />
<text  x="307.61" y="479.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="961.0" y="437" width="0.4" height="15.0" fill="rgb(254,126,47)" rx="2" ry="2" />
<text  x="964.03" y="447.5" ></text>
</g>
<g >
<title>inherit_event.isra.0 (1 samples, 0.03%)</title><rect x="1036.3" y="373" width="0.4" height="15.0" fill="rgb(205,159,41)" rx="2" ry="2" />
<text  x="1039.32" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="1084.6" y="517" width="0.8" height="15.0" fill="rgb(226,228,48)" rx="2" ry="2" />
<text  x="1087.59" y="527.5" ></text>
</g>
<g >
<title>do_user_addr_fault (8 samples, 0.26%)</title><rect x="1157.2" y="485" width="3.1" height="15.0" fill="rgb(207,200,7)" rx="2" ry="2" />
<text  x="1160.18" y="495.5" ></text>
</g>
<g >
<title>queue_work_on (2 samples, 0.07%)</title><rect x="1035.5" y="325" width="0.8" height="15.0" fill="rgb(227,57,3)" rx="2" ry="2" />
<text  x="1038.55" y="335.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1150.6" y="469" width="0.4" height="15.0" fill="rgb(225,9,52)" rx="2" ry="2" />
<text  x="1153.62" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="1034.8" y="245" width="0.7" height="15.0" fill="rgb(217,10,33)" rx="2" ry="2" />
<text  x="1037.78" y="255.5" ></text>
</g>
<g >
<title>clear_page_rep (4 samples, 0.13%)</title><rect x="1158.0" y="373" width="1.5" height="15.0" fill="rgb(220,160,6)" rx="2" ry="2" />
<text  x="1160.95" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.13%)</title><rect x="958.7" y="437" width="1.6" height="15.0" fill="rgb(236,118,23)" rx="2" ry="2" />
<text  x="961.71" y="447.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.03%)</title><rect x="1036.7" y="405" width="0.4" height="15.0" fill="rgb(227,50,5)" rx="2" ry="2" />
<text  x="1039.71" y="415.5" ></text>
</g>
<g >
<title>__vfprintf_internal (2 samples, 0.07%)</title><rect x="312.3" y="501" width="0.8" height="15.0" fill="rgb(224,110,23)" rx="2" ry="2" />
<text  x="315.34" y="511.5" ></text>
</g>
<g >
<title>__set_task_comm (1 samples, 0.03%)</title><rect x="1084.6" y="405" width="0.4" height="15.0" fill="rgb(212,31,27)" rx="2" ry="2" />
<text  x="1087.59" y="415.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.10%)</title><rect x="1091.5" y="405" width="1.2" height="15.0" fill="rgb(233,113,1)" rx="2" ry="2" />
<text  x="1094.54" y="415.5" ></text>
</g>
<g >
<title>GOMP_parallel (79 samples, 2.59%)</title><rect x="981.1" y="501" width="30.5" height="15.0" fill="rgb(230,138,51)" rx="2" ry="2" />
<text  x="984.11" y="511.5" >GO..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1157.6" y="437" width="0.4" height="15.0" fill="rgb(235,160,24)" rx="2" ry="2" />
<text  x="1160.57" y="447.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.10%)</title><rect x="1091.5" y="437" width="1.2" height="15.0" fill="rgb(233,178,31)" rx="2" ry="2" />
<text  x="1094.54" y="447.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (1 samples, 0.03%)</title><rect x="304.6" y="357" width="0.4" height="15.0" fill="rgb(225,197,24)" rx="2" ry="2" />
<text  x="307.61" y="367.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.03%)</title><rect x="1189.6" y="533" width="0.4" height="15.0" fill="rgb(205,4,14)" rx="2" ry="2" />
<text  x="1192.61" y="543.5" ></text>
</g>
<g >
<title>__do_sys_clone (2 samples, 0.07%)</title><rect x="1036.3" y="453" width="0.8" height="15.0" fill="rgb(254,221,47)" rx="2" ry="2" />
<text  x="1039.32" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6 samples, 0.20%)</title><rect x="303.8" y="517" width="2.4" height="15.0" fill="rgb(252,42,52)" rx="2" ry="2" />
<text  x="306.84" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.23%)</title><rect x="974.9" y="373" width="2.7" height="15.0" fill="rgb(246,48,39)" rx="2" ry="2" />
<text  x="977.93" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_write (8 samples, 0.26%)</title><rect x="1033.2" y="517" width="3.1" height="15.0" fill="rgb(251,226,13)" rx="2" ry="2" />
<text  x="1036.23" y="527.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (10 samples, 0.33%)</title><rect x="1185.8" y="533" width="3.8" height="15.0" fill="rgb(217,214,52)" rx="2" ry="2" />
<text  x="1188.75" y="543.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_put (1 samples, 0.03%)</title><rect x="1122.4" y="517" width="0.4" height="15.0" fill="rgb(211,180,1)" rx="2" ry="2" />
<text  x="1125.43" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (1 samples, 0.03%)</title><rect x="960.6" y="389" width="0.4" height="15.0" fill="rgb(212,45,44)" rx="2" ry="2" />
<text  x="963.64" y="399.5" ></text>
</g>
<g >
<title>copy_user_generic_string (2 samples, 0.07%)</title><rect x="1091.5" y="341" width="0.8" height="15.0" fill="rgb(239,167,47)" rx="2" ry="2" />
<text  x="1094.54" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (18 samples, 0.59%)</title><rect x="306.2" y="533" width="6.9" height="15.0" fill="rgb(233,48,53)" rx="2" ry="2" />
<text  x="309.16" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1151.0" y="517" width="0.4" height="15.0" fill="rgb(234,135,47)" rx="2" ry="2" />
<text  x="1154.00" y="527.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (1,724 samples, 56.41%)</title><rect x="313.9" y="517" width="665.7" height="15.0" fill="rgb(221,128,6)" rx="2" ry="2" />
<text  x="316.88" y="527.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>malloc (14 samples, 0.46%)</title><rect x="1151.4" y="533" width="5.4" height="15.0" fill="rgb(211,51,14)" rx="2" ry="2" />
<text  x="1154.39" y="543.5" ></text>
</g>
<g >
<title>__schedule (12 samples, 0.39%)</title><rect x="974.9" y="389" width="4.7" height="15.0" fill="rgb(228,79,18)" rx="2" ry="2" />
<text  x="977.93" y="399.5" ></text>
</g>
<g >
<title>blk_update_request (1 samples, 0.03%)</title><rect x="957.6" y="245" width="0.3" height="15.0" fill="rgb(213,10,24)" rx="2" ry="2" />
<text  x="960.55" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.07%)</title><rect x="1109.3" y="501" width="0.8" height="15.0" fill="rgb(219,45,22)" rx="2" ry="2" />
<text  x="1112.30" y="511.5" ></text>
</g>
<g >
<title>read (3 samples, 0.10%)</title><rect x="1091.5" y="517" width="1.2" height="15.0" fill="rgb(242,178,0)" rx="2" ry="2" />
<text  x="1094.54" y="527.5" ></text>
</g>
<g >
<title>perf_event_alloc (1 samples, 0.03%)</title><rect x="1036.3" y="357" width="0.4" height="15.0" fill="rgb(252,195,11)" rx="2" ry="2" />
<text  x="1039.32" y="367.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.03%)</title><rect x="960.3" y="277" width="0.3" height="15.0" fill="rgb(235,209,51)" rx="2" ry="2" />
<text  x="963.26" y="287.5" ></text>
</g>
<g >
<title>OMP::ForwardElimination (1,209 samples, 39.56%)</title><rect x="494.6" y="501" width="466.8" height="15.0" fill="rgb(215,141,21)" rx="2" ry="2" />
<text  x="497.59" y="511.5" >OMP::ForwardElimination</text>
</g>
<g >
<title>perf_event_comm (1 samples, 0.03%)</title><rect x="1084.6" y="389" width="0.4" height="15.0" fill="rgb(210,99,52)" rx="2" ry="2" />
<text  x="1087.59" y="399.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="305.4" y="453" width="0.4" height="15.0" fill="rgb(206,91,25)" rx="2" ry="2" />
<text  x="308.39" y="463.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (1 samples, 0.03%)</title><rect x="305.0" y="341" width="0.4" height="15.0" fill="rgb(240,118,21)" rx="2" ry="2" />
<text  x="308.00" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="305.0" y="373" width="0.4" height="15.0" fill="rgb(231,184,32)" rx="2" ry="2" />
<text  x="308.00" y="383.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.03%)</title><rect x="304.6" y="373" width="0.4" height="15.0" fill="rgb(231,38,42)" rx="2" ry="2" />
<text  x="307.61" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4 samples, 0.13%)</title><rect x="958.7" y="421" width="1.6" height="15.0" fill="rgb(245,61,12)" rx="2" ry="2" />
<text  x="961.71" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2 samples, 0.07%)</title><rect x="1084.6" y="485" width="0.8" height="15.0" fill="rgb(242,105,46)" rx="2" ry="2" />
<text  x="1087.59" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1150.6" y="517" width="0.4" height="15.0" fill="rgb(227,185,28)" rx="2" ry="2" />
<text  x="1153.62" y="527.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.03%)</title><rect x="1085.0" y="357" width="0.4" height="15.0" fill="rgb(237,135,0)" rx="2" ry="2" />
<text  x="1087.97" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable_all (6 samples, 0.20%)</title><rect x="974.9" y="309" width="2.3" height="15.0" fill="rgb(223,176,7)" rx="2" ry="2" />
<text  x="977.93" y="319.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1070.7" y="469" width="0.4" height="15.0" fill="rgb(224,167,30)" rx="2" ry="2" />
<text  x="1073.69" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.03%)</title><rect x="960.3" y="325" width="0.3" height="15.0" fill="rgb(248,198,48)" rx="2" ry="2" />
<text  x="963.26" y="335.5" ></text>
</g>
<g >
<title>kernfs_fop_readdir (1 samples, 0.03%)</title><rect x="1149.1" y="437" width="0.4" height="15.0" fill="rgb(231,208,44)" rx="2" ry="2" />
<text  x="1152.07" y="447.5" ></text>
</g>
<g >
<title>round_and_return (22 samples, 0.72%)</title><rect x="1092.7" y="517" width="8.5" height="15.0" fill="rgb(234,195,4)" rx="2" ry="2" />
<text  x="1095.70" y="527.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (592 samples, 19.37%)</title><rect x="77.6" y="533" width="228.6" height="15.0" fill="rgb(209,166,30)" rx="2" ry="2" />
<text  x="80.57" y="543.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.03%)</title><rect x="961.0" y="325" width="0.4" height="15.0" fill="rgb(232,150,28)" rx="2" ry="2" />
<text  x="964.03" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="305.8" y="453" width="0.4" height="15.0" fill="rgb(252,64,38)" rx="2" ry="2" />
<text  x="308.77" y="463.5" ></text>
</g>
<g >
<title>schedule_tail (87 samples, 2.85%)</title><rect x="1037.1" y="485" width="33.6" height="15.0" fill="rgb(209,195,18)" rx="2" ry="2" />
<text  x="1040.09" y="495.5" >sc..</text>
</g>
<g >
<title>vfs_write (8 samples, 0.26%)</title><rect x="1033.2" y="437" width="3.1" height="15.0" fill="rgb(214,198,20)" rx="2" ry="2" />
<text  x="1036.23" y="447.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.03%)</title><rect x="957.6" y="53" width="0.3" height="15.0" fill="rgb(221,158,43)" rx="2" ry="2" />
<text  x="960.55" y="63.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.03%)</title><rect x="1150.6" y="373" width="0.4" height="15.0" fill="rgb(223,54,0)" rx="2" ry="2" />
<text  x="1153.62" y="383.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.07%)</title><rect x="957.2" y="405" width="0.7" height="15.0" fill="rgb(222,37,21)" rx="2" ry="2" />
<text  x="960.17" y="415.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.03%)</title><rect x="1151.0" y="453" width="0.4" height="15.0" fill="rgb(244,137,41)" rx="2" ry="2" />
<text  x="1154.00" y="463.5" ></text>
</g>
<g >
<title>queue_work_on (2 samples, 0.07%)</title><rect x="1034.8" y="309" width="0.7" height="15.0" fill="rgb(208,180,44)" rx="2" ry="2" />
<text  x="1037.78" y="319.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.03%)</title><rect x="957.6" y="69" width="0.3" height="15.0" fill="rgb(245,210,41)" rx="2" ry="2" />
<text  x="960.55" y="79.5" ></text>
</g>
<g >
<title>do_output_char (2 samples, 0.07%)</title><rect x="1034.8" y="357" width="0.7" height="15.0" fill="rgb(216,83,27)" rx="2" ry="2" />
<text  x="1037.78" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.03%)</title><rect x="961.4" y="405" width="0.4" height="15.0" fill="rgb(206,128,15)" rx="2" ry="2" />
<text  x="964.41" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="961.4" y="373" width="0.4" height="15.0" fill="rgb(208,69,8)" rx="2" ry="2" />
<text  x="964.41" y="383.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (14 samples, 0.46%)</title><rect x="1006.2" y="485" width="5.4" height="15.0" fill="rgb(246,125,48)" rx="2" ry="2" />
<text  x="1009.20" y="495.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="1071.1" y="469" width="0.4" height="15.0" fill="rgb(251,223,46)" rx="2" ry="2" />
<text  x="1074.07" y="479.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="969.9" y="389" width="0.4" height="15.0" fill="rgb(246,152,12)" rx="2" ry="2" />
<text  x="972.91" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.03%)</title><rect x="305.0" y="357" width="0.4" height="15.0" fill="rgb(231,208,22)" rx="2" ry="2" />
<text  x="308.00" y="367.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.03%)</title><rect x="1035.9" y="245" width="0.4" height="15.0" fill="rgb(240,171,26)" rx="2" ry="2" />
<text  x="1038.94" y="255.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="960.3" y="389" width="0.3" height="15.0" fill="rgb(210,226,45)" rx="2" ry="2" />
<text  x="963.26" y="399.5" ></text>
</g>
<g >
<title>do_futex (24 samples, 0.79%)</title><rect x="970.3" y="453" width="9.3" height="15.0" fill="rgb(247,223,37)" rx="2" ry="2" />
<text  x="973.29" y="463.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.03%)</title><rect x="1034.0" y="373" width="0.4" height="15.0" fill="rgb(249,193,20)" rx="2" ry="2" />
<text  x="1037.01" y="383.5" ></text>
</g>
<g >
<title>do_anonymous_page (6 samples, 0.20%)</title><rect x="1158.0" y="437" width="2.3" height="15.0" fill="rgb(237,20,54)" rx="2" ry="2" />
<text  x="1160.95" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (8 samples, 0.26%)</title><rect x="1157.2" y="501" width="3.1" height="15.0" fill="rgb(212,177,21)" rx="2" ry="2" />
<text  x="1160.18" y="511.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="960.3" y="421" width="0.3" height="15.0" fill="rgb(220,39,41)" rx="2" ry="2" />
<text  x="963.26" y="431.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2 samples, 0.07%)</title><rect x="1080.0" y="485" width="0.7" height="15.0" fill="rgb(236,95,4)" rx="2" ry="2" />
<text  x="1082.95" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.23%)</title><rect x="1157.6" y="453" width="2.7" height="15.0" fill="rgb(247,39,34)" rx="2" ry="2" />
<text  x="1160.57" y="463.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.03%)</title><rect x="1156.8" y="405" width="0.4" height="15.0" fill="rgb(207,8,5)" rx="2" ry="2" />
<text  x="1159.79" y="415.5" ></text>
</g>
<g >
<title>blk_update_request (1 samples, 0.03%)</title><rect x="1070.3" y="165" width="0.4" height="15.0" fill="rgb(217,103,40)" rx="2" ry="2" />
<text  x="1073.30" y="175.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.03%)</title><rect x="1150.6" y="389" width="0.4" height="15.0" fill="rgb(240,197,19)" rx="2" ry="2" />
<text  x="1153.62" y="399.5" ></text>
</g>
<g >
<title>signal_wake_up_state (1 samples, 0.03%)</title><rect x="1150.6" y="437" width="0.4" height="15.0" fill="rgb(253,12,31)" rx="2" ry="2" />
<text  x="1153.62" y="447.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.07%)</title><rect x="1034.8" y="293" width="0.7" height="15.0" fill="rgb(248,54,5)" rx="2" ry="2" />
<text  x="1037.78" y="303.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (11 samples, 0.36%)</title><rect x="47.8" y="453" width="4.3" height="15.0" fill="rgb(250,132,36)" rx="2" ry="2" />
<text  x="50.84" y="463.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (8 samples, 0.26%)</title><rect x="1129.0" y="517" width="3.1" height="15.0" fill="rgb(232,214,23)" rx="2" ry="2" />
<text  x="1131.99" y="527.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.07%)</title><rect x="304.6" y="421" width="0.8" height="15.0" fill="rgb(234,108,17)" rx="2" ry="2" />
<text  x="307.61" y="431.5" ></text>
</g>
<g >
<title>copy_process (2 samples, 0.07%)</title><rect x="1036.3" y="421" width="0.8" height="15.0" fill="rgb(242,109,15)" rx="2" ry="2" />
<text  x="1039.32" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="960.6" y="405" width="0.4" height="15.0" fill="rgb(248,78,14)" rx="2" ry="2" />
<text  x="963.64" y="415.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1011.2" y="405" width="0.4" height="15.0" fill="rgb(254,195,14)" rx="2" ry="2" />
<text  x="1014.22" y="415.5" ></text>
</g>
<g >
<title>mm_update_next_owner (1 samples, 0.03%)</title><rect x="1151.0" y="405" width="0.4" height="15.0" fill="rgb(244,78,42)" rx="2" ry="2" />
<text  x="1154.00" y="415.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (1 samples, 0.03%)</title><rect x="961.0" y="453" width="0.4" height="15.0" fill="rgb(231,31,38)" rx="2" ry="2" />
<text  x="964.03" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.03%)</title><rect x="1011.6" y="469" width="0.4" height="15.0" fill="rgb(209,220,51)" rx="2" ry="2" />
<text  x="1014.61" y="479.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (8 samples, 0.26%)</title><rect x="1157.2" y="533" width="3.1" height="15.0" fill="rgb(209,20,30)" rx="2" ry="2" />
<text  x="1160.18" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6 samples, 0.20%)</title><rect x="972.6" y="421" width="2.3" height="15.0" fill="rgb(212,178,12)" rx="2" ry="2" />
<text  x="975.61" y="431.5" ></text>
</g>
<g >
<title>n_tty_write (5 samples, 0.16%)</title><rect x="1034.4" y="373" width="1.9" height="15.0" fill="rgb(228,33,13)" rx="2" ry="2" />
<text  x="1037.39" y="383.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.03%)</title><rect x="960.6" y="245" width="0.4" height="15.0" fill="rgb(240,83,36)" rx="2" ry="2" />
<text  x="963.64" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.03%)</title><rect x="1070.3" y="325" width="0.4" height="15.0" fill="rgb(225,122,3)" rx="2" ry="2" />
<text  x="1073.30" y="335.5" ></text>
</g>
<g >
<title>amdgpu_irq_dispatch (1 samples, 0.03%)</title><rect x="957.2" y="357" width="0.4" height="15.0" fill="rgb(208,148,40)" rx="2" ry="2" />
<text  x="960.17" y="367.5" ></text>
</g>
<g >
<title>perf_event_init_task (1 samples, 0.03%)</title><rect x="1036.3" y="405" width="0.4" height="15.0" fill="rgb(208,114,13)" rx="2" ry="2" />
<text  x="1039.32" y="415.5" ></text>
</g>
<g >
<title>wake_up_process (2 samples, 0.07%)</title><rect x="1034.8" y="261" width="0.7" height="15.0" fill="rgb(208,71,26)" rx="2" ry="2" />
<text  x="1037.78" y="271.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.03%)</title><rect x="961.0" y="469" width="0.4" height="15.0" fill="rgb(236,93,2)" rx="2" ry="2" />
<text  x="964.03" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="1035.5" y="261" width="0.8" height="15.0" fill="rgb(247,123,47)" rx="2" ry="2" />
<text  x="1038.55" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (21 samples, 0.69%)</title><rect x="1049.8" y="453" width="8.1" height="15.0" fill="rgb(242,208,37)" rx="2" ry="2" />
<text  x="1052.84" y="463.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (4 samples, 0.13%)</title><rect x="72.2" y="469" width="1.5" height="15.0" fill="rgb(236,102,26)" rx="2" ry="2" />
<text  x="75.17" y="479.5" ></text>
</g>
<g >
<title>inherit_task_group.isra.0.part.0 (1 samples, 0.03%)</title><rect x="1036.3" y="389" width="0.4" height="15.0" fill="rgb(212,219,39)" rx="2" ry="2" />
<text  x="1039.32" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="1091.5" y="485" width="1.2" height="15.0" fill="rgb(207,202,31)" rx="2" ry="2" />
<text  x="1094.54" y="495.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.03%)</title><rect x="1159.5" y="373" width="0.4" height="15.0" fill="rgb(218,74,12)" rx="2" ry="2" />
<text  x="1162.50" y="383.5" ></text>
</g>
<g >
<title>__srcu_read_lock (1 samples, 0.03%)</title><rect x="1036.3" y="341" width="0.4" height="15.0" fill="rgb(226,37,22)" rx="2" ry="2" />
<text  x="1039.32" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_clone (2 samples, 0.07%)</title><rect x="1036.3" y="469" width="0.8" height="15.0" fill="rgb(207,207,9)" rx="2" ry="2" />
<text  x="1039.32" y="479.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="305.0" y="389" width="0.4" height="15.0" fill="rgb(222,29,15)" rx="2" ry="2" />
<text  x="308.00" y="399.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.03%)</title><rect x="1011.2" y="261" width="0.4" height="15.0" fill="rgb(239,68,33)" rx="2" ry="2" />
<text  x="1014.22" y="271.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.03%)</title><rect x="76.8" y="389" width="0.4" height="15.0" fill="rgb(217,224,28)" rx="2" ry="2" />
<text  x="79.80" y="399.5" ></text>
</g>
<g >
<title>ret_from_fork (89 samples, 2.91%)</title><rect x="1037.1" y="501" width="34.4" height="15.0" fill="rgb(236,141,32)" rx="2" ry="2" />
<text  x="1040.09" y="511.5" >re..</text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.03%)</title><rect x="1035.5" y="229" width="0.4" height="15.0" fill="rgb(236,214,12)" rx="2" ry="2" />
<text  x="1038.55" y="239.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.07%)</title><rect x="957.2" y="469" width="0.7" height="15.0" fill="rgb(220,214,27)" rx="2" ry="2" />
<text  x="960.17" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1011.2" y="469" width="0.4" height="15.0" fill="rgb(219,186,16)" rx="2" ry="2" />
<text  x="1014.22" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (22 samples, 0.72%)</title><rect x="22.7" y="453" width="8.5" height="15.0" fill="rgb(244,201,31)" rx="2" ry="2" />
<text  x="25.74" y="463.5" ></text>
</g>
<g >
<title>run_local_timers (1 samples, 0.03%)</title><rect x="959.9" y="357" width="0.4" height="15.0" fill="rgb(215,61,32)" rx="2" ry="2" />
<text  x="962.87" y="367.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.03%)</title><rect x="76.8" y="373" width="0.4" height="15.0" fill="rgb(248,138,45)" rx="2" ry="2" />
<text  x="79.80" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.16%)</title><rect x="1158.0" y="405" width="1.9" height="15.0" fill="rgb(208,16,47)" rx="2" ry="2" />
<text  x="1160.95" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="957.6" y="37" width="0.3" height="15.0" fill="rgb(238,94,18)" rx="2" ry="2" />
<text  x="960.55" y="47.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7 samples, 0.23%)</title><rect x="958.3" y="469" width="2.7" height="15.0" fill="rgb(237,193,1)" rx="2" ry="2" />
<text  x="961.32" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.26%)</title><rect x="1033.2" y="469" width="3.1" height="15.0" fill="rgb(207,196,45)" rx="2" ry="2" />
<text  x="1036.23" y="479.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1151.0" y="485" width="0.4" height="15.0" fill="rgb(244,56,5)" rx="2" ry="2" />
<text  x="1154.00" y="495.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.03%)</title><rect x="305.4" y="421" width="0.4" height="15.0" fill="rgb(238,163,17)" rx="2" ry="2" />
<text  x="308.39" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_open (1 samples, 0.03%)</title><rect x="1032.8" y="517" width="0.4" height="15.0" fill="rgb(206,11,31)" rx="2" ry="2" />
<text  x="1035.85" y="527.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.07%)</title><rect x="76.8" y="421" width="0.8" height="15.0" fill="rgb(248,122,6)" rx="2" ry="2" />
<text  x="79.80" y="431.5" ></text>
</g>
<g >
<title>amdgpu_fence_process (1 samples, 0.03%)</title><rect x="957.2" y="325" width="0.4" height="15.0" fill="rgb(205,151,39)" rx="2" ry="2" />
<text  x="960.17" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="960.6" y="453" width="0.4" height="15.0" fill="rgb(244,224,17)" rx="2" ry="2" />
<text  x="963.64" y="463.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.03%)</title><rect x="960.3" y="293" width="0.3" height="15.0" fill="rgb(238,20,31)" rx="2" ry="2" />
<text  x="963.26" y="303.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1070.3" y="389" width="0.4" height="15.0" fill="rgb(216,98,48)" rx="2" ry="2" />
<text  x="1073.30" y="399.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="305.8" y="405" width="0.4" height="15.0" fill="rgb(241,175,53)" rx="2" ry="2" />
<text  x="308.77" y="415.5" ></text>
</g>
<g >
<title>__correctly_grouped_prefixmb (2 samples, 0.07%)</title><rect x="1149.5" y="533" width="0.7" height="15.0" fill="rgb(232,90,40)" rx="2" ry="2" />
<text  x="1152.46" y="543.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.07%)</title><rect x="959.5" y="373" width="0.8" height="15.0" fill="rgb(225,29,12)" rx="2" ry="2" />
<text  x="962.48" y="383.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.03%)</title><rect x="960.6" y="229" width="0.4" height="15.0" fill="rgb(211,124,20)" rx="2" ry="2" />
<text  x="963.64" y="239.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1071.1" y="453" width="0.4" height="15.0" fill="rgb(229,22,24)" rx="2" ry="2" />
<text  x="1074.07" y="463.5" ></text>
</g>
<g >
<title>ext4_release_io_end (1 samples, 0.03%)</title><rect x="1070.3" y="101" width="0.4" height="15.0" fill="rgb(230,191,0)" rx="2" ry="2" />
<text  x="1073.30" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (1 samples, 0.03%)</title><rect x="1011.2" y="373" width="0.4" height="15.0" fill="rgb(219,147,5)" rx="2" ry="2" />
<text  x="1014.22" y="383.5" ></text>
</g>
<g >
<title>__perf_addr_filters_adjust (1 samples, 0.03%)</title><rect x="1156.8" y="373" width="0.4" height="15.0" fill="rgb(248,149,17)" rx="2" ry="2" />
<text  x="1159.79" y="383.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.03%)</title><rect x="1157.2" y="469" width="0.4" height="15.0" fill="rgb(217,69,14)" rx="2" ry="2" />
<text  x="1160.18" y="479.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.03%)</title><rect x="1156.8" y="421" width="0.4" height="15.0" fill="rgb(241,217,43)" rx="2" ry="2" />
<text  x="1159.79" y="431.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (1 samples, 0.03%)</title><rect x="960.6" y="357" width="0.4" height="15.0" fill="rgb(238,98,41)" rx="2" ry="2" />
<text  x="963.64" y="367.5" ></text>
</g>
<g >
<title>nvme_complete_rq (1 samples, 0.03%)</title><rect x="1070.3" y="197" width="0.4" height="15.0" fill="rgb(220,113,38)" rx="2" ry="2" />
<text  x="1073.30" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4 samples, 0.13%)</title><rect x="304.6" y="501" width="1.6" height="15.0" fill="rgb(214,101,45)" rx="2" ry="2" />
<text  x="307.61" y="511.5" ></text>
</g>
<g >
<title>__mpn_lshift (3 samples, 0.10%)</title><rect x="1074.2" y="517" width="1.1" height="15.0" fill="rgb(224,83,12)" rx="2" ry="2" />
<text  x="1077.16" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="961.4" y="501" width="0.4" height="15.0" fill="rgb(239,104,53)" rx="2" ry="2" />
<text  x="964.41" y="511.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.03%)</title><rect x="1092.3" y="357" width="0.4" height="15.0" fill="rgb(230,75,24)" rx="2" ry="2" />
<text  x="1095.31" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (15 samples, 0.49%)</title><rect x="961.8" y="501" width="5.8" height="15.0" fill="rgb(229,122,15)" rx="2" ry="2" />
<text  x="964.80" y="511.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="1084.6" y="357" width="0.4" height="15.0" fill="rgb(210,114,50)" rx="2" ry="2" />
<text  x="1087.59" y="367.5" ></text>
</g>
<g >
<title>syscall_return_slowpath (2 samples, 0.07%)</title><rect x="1070.7" y="485" width="0.8" height="15.0" fill="rgb(207,12,17)" rx="2" ry="2" />
<text  x="1073.69" y="495.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.03%)</title><rect x="1085.0" y="325" width="0.4" height="15.0" fill="rgb(235,129,31)" rx="2" ry="2" />
<text  x="1087.97" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1070.3" y="421" width="0.4" height="15.0" fill="rgb(247,100,30)" rx="2" ry="2" />
<text  x="1073.30" y="431.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.07%)</title><rect x="961.8" y="373" width="0.8" height="15.0" fill="rgb(229,68,3)" rx="2" ry="2" />
<text  x="964.80" y="383.5" ></text>
</g>
<g >
<title>calculate_sigpending (22 samples, 0.72%)</title><rect x="1049.5" y="469" width="8.4" height="15.0" fill="rgb(216,224,15)" rx="2" ry="2" />
<text  x="1052.45" y="479.5" ></text>
</g>
<g >
<title>blk_flush_complete_seq (1 samples, 0.03%)</title><rect x="957.6" y="277" width="0.3" height="15.0" fill="rgb(221,126,25)" rx="2" ry="2" />
<text  x="960.55" y="287.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="961.0" y="421" width="0.4" height="15.0" fill="rgb(242,17,23)" rx="2" ry="2" />
<text  x="964.03" y="431.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.03%)</title><rect x="305.4" y="405" width="0.4" height="15.0" fill="rgb(207,65,51)" rx="2" ry="2" />
<text  x="308.39" y="415.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (6 samples, 0.20%)</title><rect x="1034.0" y="389" width="2.3" height="15.0" fill="rgb(228,164,30)" rx="2" ry="2" />
<text  x="1037.01" y="399.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="961.4" y="421" width="0.4" height="15.0" fill="rgb(237,134,20)" rx="2" ry="2" />
<text  x="964.41" y="431.5" ></text>
</g>
<g >
<title>[unknown] (81 samples, 2.65%)</title><rect x="981.1" y="517" width="31.3" height="15.0" fill="rgb(209,7,38)" rx="2" ry="2" />
<text  x="984.11" y="527.5" >[u..</text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.03%)</title><rect x="1156.8" y="453" width="0.4" height="15.0" fill="rgb(230,31,31)" rx="2" ry="2" />
<text  x="1159.79" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="961.4" y="453" width="0.4" height="15.0" fill="rgb(231,180,46)" rx="2" ry="2" />
<text  x="964.41" y="463.5" ></text>
</g>
<g >
<title>vm_mmap (1 samples, 0.03%)</title><rect x="1085.0" y="389" width="0.4" height="15.0" fill="rgb(238,79,50)" rx="2" ry="2" />
<text  x="1087.97" y="399.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.03%)</title><rect x="961.0" y="341" width="0.4" height="15.0" fill="rgb(241,102,30)" rx="2" ry="2" />
<text  x="964.03" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.07%)</title><rect x="957.2" y="437" width="0.7" height="15.0" fill="rgb(244,98,16)" rx="2" ry="2" />
<text  x="960.17" y="447.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.03%)</title><rect x="76.8" y="325" width="0.4" height="15.0" fill="rgb(219,0,11)" rx="2" ry="2" />
<text  x="79.80" y="335.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.03%)</title><rect x="1070.3" y="149" width="0.4" height="15.0" fill="rgb(226,110,24)" rx="2" ry="2" />
<text  x="1073.30" y="159.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.03%)</title><rect x="959.5" y="325" width="0.4" height="15.0" fill="rgb(223,84,6)" rx="2" ry="2" />
<text  x="962.48" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.16%)</title><rect x="1158.0" y="389" width="1.9" height="15.0" fill="rgb(236,82,48)" rx="2" ry="2" />
<text  x="1160.95" y="399.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (53 samples, 1.73%)</title><rect x="1012.4" y="517" width="20.4" height="15.0" fill="rgb(230,31,14)" rx="2" ry="2" />
<text  x="1015.38" y="527.5" ></text>
</g>
<g >
<title>switch_fpu_return (12 samples, 0.39%)</title><rect x="963.0" y="421" width="4.6" height="15.0" fill="rgb(221,196,0)" rx="2" ry="2" />
<text  x="965.96" y="431.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.03%)</title><rect x="77.2" y="405" width="0.4" height="15.0" fill="rgb(205,139,17)" rx="2" ry="2" />
<text  x="80.19" y="415.5" ></text>
</g>
<g >
<title>blk_mq_end_request (1 samples, 0.03%)</title><rect x="957.6" y="261" width="0.3" height="15.0" fill="rgb(226,142,29)" rx="2" ry="2" />
<text  x="960.55" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.03%)</title><rect x="960.3" y="309" width="0.3" height="15.0" fill="rgb(234,1,14)" rx="2" ry="2" />
<text  x="963.26" y="319.5" ></text>
</g>
</g>
</svg>
