<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >On-CPU Time Flame Graph: $ ./ompge ./ge_data/size512x512</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>arch_pick_mmap_layout (1 samples, 0.09%)</title><rect x="1108.5" y="213" width="1.0" height="15.0" fill="rgb(233,218,8)" rx="2" ry="2" />
<text  x="1111.47" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.27%)</title><rect x="1163.2" y="261" width="3.2" height="15.0" fill="rgb(205,89,12)" rx="2" ry="2" />
<text  x="1166.18" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="906.8" y="277" width="1.1" height="15.0" fill="rgb(223,29,54)" rx="2" ry="2" />
<text  x="909.80" y="287.5" ></text>
</g>
<g >
<title>ret_from_fork (97 samples, 8.82%)</title><rect x="991.5" y="309" width="104.1" height="15.0" fill="rgb(239,56,19)" rx="2" ry="2" />
<text  x="994.55" y="319.5" >ret_from_fork</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="1088.1" y="229" width="1.1" height="15.0" fill="rgb(223,194,5)" rx="2" ry="2" />
<text  x="1091.09" y="239.5" ></text>
</g>
<g >
<title>__clone (99 samples, 9.00%)</title><rect x="989.4" y="325" width="106.2" height="15.0" fill="rgb(251,101,12)" rx="2" ry="2" />
<text  x="992.40" y="335.5" >__clone</text>
</g>
<g >
<title>__vsnprintf_internal (1 samples, 0.09%)</title><rect x="246.0" y="325" width="1.1" height="15.0" fill="rgb(208,109,46)" rx="2" ry="2" />
<text  x="249.00" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.18%)</title><rect x="989.4" y="293" width="2.1" height="15.0" fill="rgb(217,17,14)" rx="2" ry="2" />
<text  x="992.40" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="1151.4" y="293" width="1.1" height="15.0" fill="rgb(250,94,38)" rx="2" ry="2" />
<text  x="1154.38" y="303.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (1 samples, 0.09%)</title><rect x="1162.1" y="293" width="1.1" height="15.0" fill="rgb(205,201,24)" rx="2" ry="2" />
<text  x="1165.11" y="303.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.27%)</title><rect x="986.2" y="261" width="3.2" height="15.0" fill="rgb(226,14,24)" rx="2" ry="2" />
<text  x="989.18" y="271.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.09%)</title><rect x="1150.3" y="133" width="1.1" height="15.0" fill="rgb(207,7,10)" rx="2" ry="2" />
<text  x="1153.31" y="143.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="69.0" y="213" width="1.1" height="15.0" fill="rgb(217,202,9)" rx="2" ry="2" />
<text  x="72.00" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="240.6" y="309" width="1.1" height="15.0" fill="rgb(224,164,32)" rx="2" ry="2" />
<text  x="243.64" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.27%)</title><rect x="1163.2" y="213" width="3.2" height="15.0" fill="rgb(250,137,47)" rx="2" ry="2" />
<text  x="1166.18" y="223.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (2 samples, 0.18%)</title><rect x="1103.1" y="293" width="2.2" height="15.0" fill="rgb(252,201,2)" rx="2" ry="2" />
<text  x="1106.11" y="303.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.09%)</title><rect x="1108.5" y="277" width="1.0" height="15.0" fill="rgb(205,59,13)" rx="2" ry="2" />
<text  x="1111.47" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="1153.5" y="149" width="1.1" height="15.0" fill="rgb(245,60,13)" rx="2" ry="2" />
<text  x="1156.53" y="159.5" ></text>
</g>
<g >
<title>alloc_vmap_area (1 samples, 0.09%)</title><rect x="989.4" y="165" width="1.1" height="15.0" fill="rgb(214,227,25)" rx="2" ry="2" />
<text  x="992.40" y="175.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.09%)</title><rect x="1152.5" y="245" width="1.0" height="15.0" fill="rgb(205,65,14)" rx="2" ry="2" />
<text  x="1155.45" y="255.5" ></text>
</g>
<g >
<title>blk_mq_force_complete_rq (1 samples, 0.09%)</title><rect x="240.6" y="101" width="1.1" height="15.0" fill="rgb(213,128,6)" rx="2" ry="2" />
<text  x="243.64" y="111.5" ></text>
</g>
<g >
<title>_exit (1 samples, 0.09%)</title><rect x="1150.3" y="341" width="1.1" height="15.0" fill="rgb(218,225,15)" rx="2" ry="2" />
<text  x="1153.31" y="351.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="1152.5" y="293" width="1.0" height="15.0" fill="rgb(216,102,43)" rx="2" ry="2" />
<text  x="1155.45" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.09%)</title><rect x="240.6" y="181" width="1.1" height="15.0" fill="rgb(226,210,16)" rx="2" ry="2" />
<text  x="243.64" y="191.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="1150.3" y="277" width="1.1" height="15.0" fill="rgb(245,43,30)" rx="2" ry="2" />
<text  x="1153.31" y="287.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.27%)</title><rect x="1105.3" y="325" width="3.2" height="15.0" fill="rgb(222,213,47)" rx="2" ry="2" />
<text  x="1108.25" y="335.5" ></text>
</g>
<g >
<title>__sigsetjmp (2 samples, 0.18%)</title><rect x="1148.2" y="341" width="2.1" height="15.0" fill="rgb(249,222,54)" rx="2" ry="2" />
<text  x="1151.16" y="351.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.09%)</title><rect x="69.0" y="229" width="1.1" height="15.0" fill="rgb(233,197,6)" rx="2" ry="2" />
<text  x="72.00" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.27%)</title><rect x="1163.2" y="229" width="3.2" height="15.0" fill="rgb(242,92,52)" rx="2" ry="2" />
<text  x="1166.18" y="239.5" ></text>
</g>
<g >
<title>__mpn_construct_double (1 samples, 0.09%)</title><rect x="1095.6" y="325" width="1.1" height="15.0" fill="rgb(228,125,21)" rx="2" ry="2" />
<text  x="1098.60" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (20 samples, 1.82%)</title><rect x="1033.4" y="261" width="21.4" height="15.0" fill="rgb(222,155,5)" rx="2" ry="2" />
<text  x="1036.38" y="271.5" >_..</text>
</g>
<g >
<title>futex_wake (1 samples, 0.09%)</title><rect x="910.0" y="133" width="1.1" height="15.0" fill="rgb(237,215,41)" rx="2" ry="2" />
<text  x="913.02" y="143.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (8 samples, 0.73%)</title><rect x="49.7" y="261" width="8.6" height="15.0" fill="rgb(237,34,39)" rx="2" ry="2" />
<text  x="52.69" y="271.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (1 samples, 0.09%)</title><rect x="907.9" y="293" width="1.0" height="15.0" fill="rgb(252,153,19)" rx="2" ry="2" />
<text  x="910.87" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (1 samples, 0.09%)</title><rect x="1152.5" y="341" width="1.0" height="15.0" fill="rgb(212,228,9)" rx="2" ry="2" />
<text  x="1155.45" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1142.8" y="293" width="1.1" height="15.0" fill="rgb(211,185,12)" rx="2" ry="2" />
<text  x="1145.80" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16 samples, 1.45%)</title><rect x="911.1" y="245" width="17.2" height="15.0" fill="rgb(240,64,26)" rx="2" ry="2" />
<text  x="914.09" y="255.5" ></text>
</g>
<g >
<title>__vfprintf_internal (1 samples, 0.09%)</title><rect x="246.0" y="309" width="1.1" height="15.0" fill="rgb(238,205,48)" rx="2" ry="2" />
<text  x="249.00" y="319.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.09%)</title><rect x="990.5" y="213" width="1.0" height="15.0" fill="rgb(246,197,18)" rx="2" ry="2" />
<text  x="993.47" y="223.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.09%)</title><rect x="906.8" y="165" width="1.1" height="15.0" fill="rgb(244,146,6)" rx="2" ry="2" />
<text  x="909.80" y="175.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.09%)</title><rect x="1150.3" y="149" width="1.1" height="15.0" fill="rgb(241,18,47)" rx="2" ry="2" />
<text  x="1153.31" y="159.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="1152.5" y="229" width="1.0" height="15.0" fill="rgb(210,72,6)" rx="2" ry="2" />
<text  x="1155.45" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1162.1" y="325" width="1.1" height="15.0" fill="rgb(217,73,45)" rx="2" ry="2" />
<text  x="1165.11" y="335.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="69.0" y="197" width="1.1" height="15.0" fill="rgb(253,229,1)" rx="2" ry="2" />
<text  x="72.00" y="207.5" ></text>
</g>
<g >
<title>zap_other_threads (1 samples, 0.09%)</title><rect x="1150.3" y="261" width="1.1" height="15.0" fill="rgb(227,197,12)" rx="2" ry="2" />
<text  x="1153.31" y="271.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_float (17 samples, 1.55%)</title><rect x="1166.4" y="341" width="18.2" height="15.0" fill="rgb(245,21,10)" rx="2" ry="2" />
<text  x="1169.40" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.18%)</title><rect x="928.3" y="229" width="2.1" height="15.0" fill="rgb(220,132,53)" rx="2" ry="2" />
<text  x="931.25" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3 samples, 0.27%)</title><rect x="1163.2" y="293" width="3.2" height="15.0" fill="rgb(212,170,35)" rx="2" ry="2" />
<text  x="1166.18" y="303.5" ></text>
</g>
<g >
<title>__do_sys_clone (2 samples, 0.18%)</title><rect x="989.4" y="261" width="2.1" height="15.0" fill="rgb(212,133,13)" rx="2" ry="2" />
<text  x="992.40" y="271.5" ></text>
</g>
<g >
<title>recalc_sigpending (1 samples, 0.09%)</title><rect x="1054.8" y="261" width="1.1" height="15.0" fill="rgb(229,32,1)" rx="2" ry="2" />
<text  x="1057.84" y="271.5" ></text>
</g>
<g >
<title>_do_fork (2 samples, 0.18%)</title><rect x="989.4" y="245" width="2.1" height="15.0" fill="rgb(223,179,46)" rx="2" ry="2" />
<text  x="992.40" y="255.5" ></text>
</g>
<g >
<title>Parallel::Solve (56 samples, 5.09%)</title><rect x="10.0" y="341" width="60.1" height="15.0" fill="rgb(241,26,7)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >Parall..</text>
</g>
<g >
<title>mutex_lock (2 samples, 0.18%)</title><rect x="987.3" y="165" width="2.1" height="15.0" fill="rgb(237,144,36)" rx="2" ry="2" />
<text  x="990.25" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (32 samples, 2.91%)</title><rect x="908.9" y="309" width="34.4" height="15.0" fill="rgb(239,227,20)" rx="2" ry="2" />
<text  x="911.95" y="319.5" >en..</text>
</g>
<g >
<title>futex_wait_queue_me (12 samples, 1.09%)</title><rect x="930.4" y="229" width="12.9" height="15.0" fill="rgb(253,87,10)" rx="2" ry="2" />
<text  x="933.40" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (32 samples, 2.91%)</title><rect x="908.9" y="293" width="34.4" height="15.0" fill="rgb(212,45,34)" rx="2" ry="2" />
<text  x="911.95" y="303.5" >do..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="906.8" y="293" width="1.1" height="15.0" fill="rgb(219,40,53)" rx="2" ry="2" />
<text  x="909.80" y="303.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.09%)</title><rect x="1161.0" y="245" width="1.1" height="15.0" fill="rgb(251,173,28)" rx="2" ry="2" />
<text  x="1164.04" y="255.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.09%)</title><rect x="1150.3" y="165" width="1.1" height="15.0" fill="rgb(231,80,47)" rx="2" ry="2" />
<text  x="1153.31" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.09%)</title><rect x="1161.0" y="293" width="1.1" height="15.0" fill="rgb(221,84,16)" rx="2" ry="2" />
<text  x="1164.04" y="303.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.09%)</title><rect x="1151.4" y="341" width="1.1" height="15.0" fill="rgb(216,226,50)" rx="2" ry="2" />
<text  x="1154.38" y="351.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.09%)</title><rect x="910.0" y="117" width="1.1" height="15.0" fill="rgb(212,210,14)" rx="2" ry="2" />
<text  x="913.02" y="127.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (9 samples, 0.82%)</title><rect x="1078.4" y="245" width="9.7" height="15.0" fill="rgb(248,80,27)" rx="2" ry="2" />
<text  x="1081.44" y="255.5" ></text>
</g>
<g >
<title>futex_wait (14 samples, 1.27%)</title><rect x="928.3" y="245" width="15.0" height="15.0" fill="rgb(230,109,29)" rx="2" ry="2" />
<text  x="931.25" y="255.5" ></text>
</g>
<g >
<title>syscall_return_slowpath (6 samples, 0.55%)</title><rect x="1089.2" y="293" width="6.4" height="15.0" fill="rgb(224,129,20)" rx="2" ry="2" />
<text  x="1092.16" y="303.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (160 samples, 14.55%)</title><rect x="70.1" y="341" width="171.6" height="15.0" fill="rgb(209,74,40)" rx="2" ry="2" />
<text  x="73.07" y="351.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>cpumask_next_wrap (1 samples, 0.09%)</title><rect x="906.8" y="149" width="1.1" height="15.0" fill="rgb(208,121,43)" rx="2" ry="2" />
<text  x="909.80" y="159.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.09%)</title><rect x="1165.3" y="181" width="1.1" height="15.0" fill="rgb(232,159,13)" rx="2" ry="2" />
<text  x="1168.33" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1150.3" y="309" width="1.1" height="15.0" fill="rgb(222,67,8)" rx="2" ry="2" />
<text  x="1153.31" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="910.0" y="213" width="1.1" height="15.0" fill="rgb(239,45,52)" rx="2" ry="2" />
<text  x="913.02" y="223.5" ></text>
</g>
<g >
<title>switch_fpu_return (6 samples, 0.55%)</title><rect x="1089.2" y="245" width="6.4" height="15.0" fill="rgb(254,206,53)" rx="2" ry="2" />
<text  x="1092.16" y="255.5" ></text>
</g>
<g >
<title>OMP::ForwardElimination (13 samples, 1.18%)</title><rect x="946.5" y="293" width="13.9" height="15.0" fill="rgb(250,111,2)" rx="2" ry="2" />
<text  x="949.49" y="303.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.09%)</title><rect x="69.0" y="165" width="1.1" height="15.0" fill="rgb(251,71,23)" rx="2" ry="2" />
<text  x="72.00" y="175.5" ></text>
</g>
<g >
<title>all (1,100 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(247,159,46)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;double&gt; (43 samples, 3.91%)</title><rect x="15.4" y="277" width="46.1" height="15.0" fill="rgb(210,11,41)" rx="2" ry="2" />
<text  x="18.36" y="287.5" >std:..</text>
</g>
<g >
<title>exec_binprm (1 samples, 0.09%)</title><rect x="1108.5" y="261" width="1.0" height="15.0" fill="rgb(205,4,18)" rx="2" ry="2" />
<text  x="1111.47" y="271.5" ></text>
</g>
<g >
<title>gup_pgd_range (1 samples, 0.09%)</title><rect x="910.0" y="85" width="1.1" height="15.0" fill="rgb(229,178,35)" rx="2" ry="2" />
<text  x="913.02" y="95.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.09%)</title><rect x="69.0" y="181" width="1.1" height="15.0" fill="rgb(205,205,42)" rx="2" ry="2" />
<text  x="72.00" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1153.5" y="341" width="1.1" height="15.0" fill="rgb(234,103,3)" rx="2" ry="2" />
<text  x="1156.53" y="351.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.09%)</title><rect x="1153.5" y="165" width="1.1" height="15.0" fill="rgb(216,86,30)" rx="2" ry="2" />
<text  x="1156.53" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.09%)</title><rect x="1153.5" y="85" width="1.1" height="15.0" fill="rgb(250,175,0)" rx="2" ry="2" />
<text  x="1156.53" y="95.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 2.09%)</title><rect x="946.5" y="325" width="24.7" height="15.0" fill="rgb(207,42,2)" rx="2" ry="2" />
<text  x="949.49" y="335.5" >[..</text>
</g>
<g >
<title>[libgomp.so.1.0.0] (649 samples, 59.00%)</title><rect x="247.1" y="325" width="696.2" height="15.0" fill="rgb(213,162,18)" rx="2" ry="2" />
<text  x="250.07" y="335.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>calculate_sigpending (21 samples, 1.91%)</title><rect x="1033.4" y="277" width="22.5" height="15.0" fill="rgb(220,40,9)" rx="2" ry="2" />
<text  x="1036.38" y="287.5" >c..</text>
</g>
<g >
<title>_cond_resched (2 samples, 0.18%)</title><rect x="987.3" y="149" width="2.1" height="15.0" fill="rgb(244,185,3)" rx="2" ry="2" />
<text  x="990.25" y="159.5" ></text>
</g>
<g >
<title>__vma_adjust (1 samples, 0.09%)</title><rect x="1161.0" y="181" width="1.1" height="15.0" fill="rgb(217,222,14)" rx="2" ry="2" />
<text  x="1164.04" y="191.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_float (5 samples, 0.45%)</title><rect x="44.3" y="261" width="5.4" height="15.0" fill="rgb(213,137,44)" rx="2" ry="2" />
<text  x="47.33" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="906.8" y="245" width="1.1" height="15.0" fill="rgb(233,172,0)" rx="2" ry="2" />
<text  x="909.80" y="255.5" ></text>
</g>
<g >
<title>__GI_____strtod_l_internal (9 samples, 0.82%)</title><rect x="1134.2" y="341" width="9.7" height="15.0" fill="rgb(208,48,20)" rx="2" ry="2" />
<text  x="1137.22" y="351.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.09%)</title><rect x="1142.8" y="181" width="1.1" height="15.0" fill="rgb(252,198,16)" rx="2" ry="2" />
<text  x="1145.80" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1153.5" y="325" width="1.1" height="15.0" fill="rgb(239,208,42)" rx="2" ry="2" />
<text  x="1156.53" y="335.5" ></text>
</g>
<g >
<title>std::string::reserve (3 samples, 0.27%)</title><rect x="58.3" y="261" width="3.2" height="15.0" fill="rgb(240,142,4)" rx="2" ry="2" />
<text  x="61.27" y="271.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (4 samples, 0.36%)</title><rect x="1184.6" y="341" width="4.3" height="15.0" fill="rgb(214,150,4)" rx="2" ry="2" />
<text  x="1187.64" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.09%)</title><rect x="1153.5" y="181" width="1.1" height="15.0" fill="rgb(244,59,1)" rx="2" ry="2" />
<text  x="1156.53" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_futex (30 samples, 2.73%)</title><rect x="911.1" y="277" width="32.2" height="15.0" fill="rgb(227,49,50)" rx="2" ry="2" />
<text  x="914.09" y="287.5" >__..</text>
</g>
<g >
<title>nvme_unmap_data (1 samples, 0.09%)</title><rect x="240.6" y="69" width="1.1" height="15.0" fill="rgb(213,31,34)" rx="2" ry="2" />
<text  x="243.64" y="79.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.09%)</title><rect x="240.6" y="293" width="1.1" height="15.0" fill="rgb(223,59,1)" rx="2" ry="2" />
<text  x="243.64" y="303.5" ></text>
</g>
<g >
<title>idtentry_exit_cond_rcu (1 samples, 0.09%)</title><rect x="1152.5" y="309" width="1.0" height="15.0" fill="rgb(229,114,46)" rx="2" ry="2" />
<text  x="1155.45" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1150.3" y="213" width="1.1" height="15.0" fill="rgb(234,175,22)" rx="2" ry="2" />
<text  x="1153.31" y="223.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.09%)</title><rect x="1161.0" y="229" width="1.1" height="15.0" fill="rgb(235,180,25)" rx="2" ry="2" />
<text  x="1164.04" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="69.0" y="309" width="1.1" height="15.0" fill="rgb(244,191,42)" rx="2" ry="2" />
<text  x="72.00" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1142.8" y="325" width="1.1" height="15.0" fill="rgb(228,188,43)" rx="2" ry="2" />
<text  x="1145.80" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="1142.8" y="277" width="1.1" height="15.0" fill="rgb(235,192,41)" rx="2" ry="2" />
<text  x="1145.80" y="287.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.09%)</title><rect x="910.0" y="101" width="1.1" height="15.0" fill="rgb(240,144,0)" rx="2" ry="2" />
<text  x="913.02" y="111.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (1 samples, 0.09%)</title><rect x="1152.5" y="325" width="1.0" height="15.0" fill="rgb(231,6,49)" rx="2" ry="2" />
<text  x="1155.45" y="335.5" ></text>
</g>
<g >
<title>nvme_pci_complete_rq (1 samples, 0.09%)</title><rect x="240.6" y="85" width="1.1" height="15.0" fill="rgb(231,123,27)" rx="2" ry="2" />
<text  x="243.64" y="95.5" ></text>
</g>
<g >
<title>setup_new_exec (1 samples, 0.09%)</title><rect x="1108.5" y="229" width="1.0" height="15.0" fill="rgb(207,84,2)" rx="2" ry="2" />
<text  x="1111.47" y="239.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.09%)</title><rect x="1152.5" y="261" width="1.0" height="15.0" fill="rgb(222,48,16)" rx="2" ry="2" />
<text  x="1155.45" y="271.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.09%)</title><rect x="69.0" y="325" width="1.1" height="15.0" fill="rgb(216,46,13)" rx="2" ry="2" />
<text  x="72.00" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1161.0" y="325" width="1.1" height="15.0" fill="rgb(209,79,39)" rx="2" ry="2" />
<text  x="1164.04" y="335.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.09%)</title><rect x="1161.0" y="261" width="1.1" height="15.0" fill="rgb(226,127,35)" rx="2" ry="2" />
<text  x="1164.04" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (3 samples, 0.27%)</title><rect x="943.3" y="325" width="3.2" height="15.0" fill="rgb(240,140,40)" rx="2" ry="2" />
<text  x="946.27" y="335.5" ></text>
</g>
<g >
<title>dl_main (2 samples, 0.18%)</title><rect x="1103.1" y="309" width="2.2" height="15.0" fill="rgb(210,29,13)" rx="2" ry="2" />
<text  x="1106.11" y="319.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.55%)</title><rect x="936.8" y="197" width="6.5" height="15.0" fill="rgb(233,31,49)" rx="2" ry="2" />
<text  x="939.84" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.27%)</title><rect x="986.2" y="277" width="3.2" height="15.0" fill="rgb(227,1,24)" rx="2" ry="2" />
<text  x="989.18" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="1153.5" y="197" width="1.1" height="15.0" fill="rgb(207,203,51)" rx="2" ry="2" />
<text  x="1156.53" y="207.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.09%)</title><rect x="1053.8" y="245" width="1.0" height="15.0" fill="rgb(206,87,52)" rx="2" ry="2" />
<text  x="1056.76" y="255.5" ></text>
</g>
<g >
<title>exit_thread (1 samples, 0.09%)</title><rect x="1152.5" y="213" width="1.0" height="15.0" fill="rgb(228,191,24)" rx="2" ry="2" />
<text  x="1155.45" y="223.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.09%)</title><rect x="1161.0" y="277" width="1.1" height="15.0" fill="rgb(208,87,27)" rx="2" ry="2" />
<text  x="1164.04" y="287.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.18%)</title><rect x="928.3" y="213" width="2.1" height="15.0" fill="rgb(214,31,22)" rx="2" ry="2" />
<text  x="931.25" y="223.5" ></text>
</g>
<g >
<title>get_random_u64 (1 samples, 0.09%)</title><rect x="1108.5" y="197" width="1.0" height="15.0" fill="rgb(215,114,34)" rx="2" ry="2" />
<text  x="1111.47" y="207.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="1151.4" y="245" width="1.1" height="15.0" fill="rgb(241,101,37)" rx="2" ry="2" />
<text  x="1154.38" y="255.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (1 samples, 0.09%)</title><rect x="1153.5" y="309" width="1.1" height="15.0" fill="rgb(246,173,53)" rx="2" ry="2" />
<text  x="1156.53" y="319.5" ></text>
</g>
<g >
<title>clear_page_rep (2 samples, 0.18%)</title><rect x="1163.2" y="181" width="2.1" height="15.0" fill="rgb(242,47,50)" rx="2" ry="2" />
<text  x="1166.18" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (3 samples, 0.27%)</title><rect x="1163.2" y="245" width="3.2" height="15.0" fill="rgb(234,134,21)" rx="2" ry="2" />
<text  x="1166.18" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (6 samples, 0.55%)</title><rect x="936.8" y="133" width="6.5" height="15.0" fill="rgb(252,19,50)" rx="2" ry="2" />
<text  x="939.84" y="143.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (9 samples, 0.82%)</title><rect x="1078.4" y="261" width="9.7" height="15.0" fill="rgb(215,211,49)" rx="2" ry="2" />
<text  x="1081.44" y="271.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.09%)</title><rect x="69.0" y="261" width="1.1" height="15.0" fill="rgb(207,72,0)" rx="2" ry="2" />
<text  x="72.00" y="271.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.09%)</title><rect x="986.2" y="181" width="1.1" height="15.0" fill="rgb(233,197,1)" rx="2" ry="2" />
<text  x="989.18" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="64.7" y="293" width="1.1" height="15.0" fill="rgb(224,82,0)" rx="2" ry="2" />
<text  x="67.71" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_write (4 samples, 0.36%)</title><rect x="985.1" y="325" width="4.3" height="15.0" fill="rgb(238,23,40)" rx="2" ry="2" />
<text  x="988.11" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.09%)</title><rect x="908.9" y="213" width="1.1" height="15.0" fill="rgb(234,6,2)" rx="2" ry="2" />
<text  x="911.95" y="223.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="1152.5" y="277" width="1.0" height="15.0" fill="rgb(254,178,47)" rx="2" ry="2" />
<text  x="1155.45" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (5 samples, 0.45%)</title><rect x="241.7" y="341" width="5.4" height="15.0" fill="rgb(208,27,15)" rx="2" ry="2" />
<text  x="244.71" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="1151.4" y="261" width="1.1" height="15.0" fill="rgb(250,179,15)" rx="2" ry="2" />
<text  x="1154.38" y="271.5" ></text>
</g>
<g >
<title>task_dead_fair (6 samples, 0.55%)</title><rect x="936.8" y="165" width="6.5" height="15.0" fill="rgb(227,86,46)" rx="2" ry="2" />
<text  x="939.84" y="175.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.09%)</title><rect x="1153.5" y="101" width="1.1" height="15.0" fill="rgb(227,80,31)" rx="2" ry="2" />
<text  x="1156.53" y="111.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (2 samples, 0.18%)</title><rect x="908.9" y="261" width="2.2" height="15.0" fill="rgb(233,87,45)" rx="2" ry="2" />
<text  x="911.95" y="271.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="1161.0" y="213" width="1.1" height="15.0" fill="rgb(225,172,24)" rx="2" ry="2" />
<text  x="1164.04" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="906.8" y="197" width="1.1" height="15.0" fill="rgb(254,221,44)" rx="2" ry="2" />
<text  x="909.80" y="207.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="1153.5" y="245" width="1.1" height="15.0" fill="rgb(228,7,16)" rx="2" ry="2" />
<text  x="1156.53" y="255.5" ></text>
</g>
<g >
<title>ReadLine (51 samples, 4.64%)</title><rect x="10.0" y="293" width="54.7" height="15.0" fill="rgb(222,67,26)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >ReadL..</text>
</g>
<g >
<title>[unknown] (827 samples, 75.18%)</title><rect x="247.1" y="341" width="887.1" height="15.0" fill="rgb(249,17,30)" rx="2" ry="2" />
<text  x="250.07" y="351.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.27%)</title><rect x="986.2" y="293" width="3.2" height="15.0" fill="rgb(243,129,5)" rx="2" ry="2" />
<text  x="989.18" y="303.5" ></text>
</g>
<g >
<title>ompge (1,100 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(248,158,34)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >ompge</text>
</g>
<g >
<title>std::istream::sentry::sentry (5 samples, 0.45%)</title><rect x="1122.4" y="325" width="5.4" height="15.0" fill="rgb(219,29,20)" rx="2" ry="2" />
<text  x="1125.42" y="335.5" ></text>
</g>
<g >
<title>calculate_sigpending (25 samples, 2.27%)</title><rect x="991.5" y="293" width="26.9" height="15.0" fill="rgb(253,207,26)" rx="2" ry="2" />
<text  x="994.55" y="303.5" >c..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="69.0" y="293" width="1.1" height="15.0" fill="rgb(208,154,10)" rx="2" ry="2" />
<text  x="72.00" y="303.5" ></text>
</g>
<g >
<title>dup_task_struct (1 samples, 0.09%)</title><rect x="989.4" y="213" width="1.1" height="15.0" fill="rgb(228,68,44)" rx="2" ry="2" />
<text  x="992.40" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.18%)</title><rect x="989.4" y="309" width="2.1" height="15.0" fill="rgb(211,133,43)" rx="2" ry="2" />
<text  x="992.40" y="319.5" ></text>
</g>
<g >
<title>__split_vma (1 samples, 0.09%)</title><rect x="1161.0" y="197" width="1.1" height="15.0" fill="rgb(226,200,34)" rx="2" ry="2" />
<text  x="1164.04" y="207.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="1162.1" y="277" width="1.1" height="15.0" fill="rgb(214,209,52)" rx="2" ry="2" />
<text  x="1165.11" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="1142.8" y="197" width="1.1" height="15.0" fill="rgb(247,168,20)" rx="2" ry="2" />
<text  x="1145.80" y="207.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.18%)</title><rect x="1103.1" y="325" width="2.2" height="15.0" fill="rgb(242,219,16)" rx="2" ry="2" />
<text  x="1106.11" y="335.5" ></text>
</g>
<g >
<title>__ctype_init (1 samples, 0.09%)</title><rect x="1147.1" y="341" width="1.1" height="15.0" fill="rgb(250,192,49)" rx="2" ry="2" />
<text  x="1150.09" y="351.5" ></text>
</g>
<g >
<title>__correctly_grouped_prefixmb (2 samples, 0.18%)</title><rect x="1144.9" y="341" width="2.2" height="15.0" fill="rgb(247,92,4)" rx="2" ry="2" />
<text  x="1147.95" y="351.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.09%)</title><rect x="240.6" y="117" width="1.1" height="15.0" fill="rgb(222,227,20)" rx="2" ry="2" />
<text  x="243.64" y="127.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (2 samples, 0.18%)</title><rect x="908.9" y="277" width="2.2" height="15.0" fill="rgb(205,66,2)" rx="2" ry="2" />
<text  x="911.95" y="287.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.09%)</title><rect x="61.5" y="277" width="1.1" height="15.0" fill="rgb(219,44,0)" rx="2" ry="2" />
<text  x="64.49" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1108.5" y="325" width="1.0" height="15.0" fill="rgb(242,80,12)" rx="2" ry="2" />
<text  x="1111.47" y="335.5" ></text>
</g>
<g >
<title>vfs_write (3 samples, 0.27%)</title><rect x="986.2" y="245" width="3.2" height="15.0" fill="rgb(221,87,38)" rx="2" ry="2" />
<text  x="989.18" y="255.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.09%)</title><rect x="1162.1" y="341" width="1.1" height="15.0" fill="rgb(222,25,14)" rx="2" ry="2" />
<text  x="1165.11" y="351.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;double&gt; (3 samples, 0.27%)</title><rect x="65.8" y="293" width="3.2" height="15.0" fill="rgb(243,140,24)" rx="2" ry="2" />
<text  x="68.78" y="303.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.09%)</title><rect x="910.0" y="149" width="1.1" height="15.0" fill="rgb(239,78,28)" rx="2" ry="2" />
<text  x="913.02" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="1150.3" y="325" width="1.1" height="15.0" fill="rgb(223,186,39)" rx="2" ry="2" />
<text  x="1153.31" y="335.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.18%)</title><rect x="987.3" y="117" width="2.1" height="15.0" fill="rgb(251,116,27)" rx="2" ry="2" />
<text  x="990.25" y="127.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.09%)</title><rect x="906.8" y="181" width="1.1" height="15.0" fill="rgb(227,175,31)" rx="2" ry="2" />
<text  x="909.80" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_clone (2 samples, 0.18%)</title><rect x="989.4" y="277" width="2.1" height="15.0" fill="rgb(240,216,43)" rx="2" ry="2" />
<text  x="992.40" y="287.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (1 samples, 0.09%)</title><rect x="246.0" y="293" width="1.1" height="15.0" fill="rgb(250,167,21)" rx="2" ry="2" />
<text  x="249.00" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.27%)</title><rect x="1163.2" y="197" width="3.2" height="15.0" fill="rgb(243,218,52)" rx="2" ry="2" />
<text  x="1166.18" y="207.5" ></text>
</g>
<g >
<title>wake_up_new_task (1 samples, 0.09%)</title><rect x="990.5" y="229" width="1.0" height="15.0" fill="rgb(213,50,32)" rx="2" ry="2" />
<text  x="993.47" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.27%)</title><rect x="986.2" y="309" width="3.2" height="15.0" fill="rgb(227,91,28)" rx="2" ry="2" />
<text  x="989.18" y="319.5" ></text>
</g>
<g >
<title>OMP::ForwardElimination (227 samples, 20.64%)</title><rect x="663.3" y="309" width="243.5" height="15.0" fill="rgb(241,183,50)" rx="2" ry="2" />
<text  x="666.29" y="319.5" >OMP::ForwardElimination</text>
</g>
<g >
<title>__clone (1 samples, 0.09%)</title><rect x="1143.9" y="341" width="1.0" height="15.0" fill="rgb(237,92,45)" rx="2" ry="2" />
<text  x="1146.87" y="351.5" ></text>
</g>
<g >
<title>n_tty_write (2 samples, 0.18%)</title><rect x="987.3" y="181" width="2.1" height="15.0" fill="rgb(240,69,25)" rx="2" ry="2" />
<text  x="990.25" y="191.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.55%)</title><rect x="1154.6" y="341" width="6.4" height="15.0" fill="rgb(218,55,52)" rx="2" ry="2" />
<text  x="1157.60" y="351.5" ></text>
</g>
<g >
<title>preempt_schedule_common (2 samples, 0.18%)</title><rect x="987.3" y="133" width="2.1" height="15.0" fill="rgb(224,11,15)" rx="2" ry="2" />
<text  x="990.25" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="1142.8" y="309" width="1.1" height="15.0" fill="rgb(219,215,37)" rx="2" ry="2" />
<text  x="1145.80" y="319.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (3 samples, 0.27%)</title><rect x="986.2" y="197" width="3.2" height="15.0" fill="rgb(232,103,2)" rx="2" ry="2" />
<text  x="989.18" y="207.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (1 samples, 0.09%)</title><rect x="989.4" y="197" width="1.1" height="15.0" fill="rgb(221,20,44)" rx="2" ry="2" />
<text  x="992.40" y="207.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (1 samples, 0.09%)</title><rect x="1153.5" y="133" width="1.1" height="15.0" fill="rgb(217,188,15)" rx="2" ry="2" />
<text  x="1156.53" y="143.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.09%)</title><rect x="1108.5" y="245" width="1.0" height="15.0" fill="rgb(219,178,50)" rx="2" ry="2" />
<text  x="1111.47" y="255.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.09%)</title><rect x="1142.8" y="245" width="1.1" height="15.0" fill="rgb(237,166,18)" rx="2" ry="2" />
<text  x="1145.80" y="255.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.09%)</title><rect x="1153.5" y="229" width="1.1" height="15.0" fill="rgb(236,190,48)" rx="2" ry="2" />
<text  x="1156.53" y="239.5" ></text>
</g>
<g >
<title>std::string::reserve (3 samples, 0.27%)</title><rect x="1127.8" y="325" width="3.2" height="15.0" fill="rgb(251,61,8)" rx="2" ry="2" />
<text  x="1130.78" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (8 samples, 0.73%)</title><rect x="21.8" y="261" width="8.6" height="15.0" fill="rgb(220,69,4)" rx="2" ry="2" />
<text  x="24.80" y="271.5" ></text>
</g>
<g >
<title>_extract_crng (1 samples, 0.09%)</title><rect x="1108.5" y="165" width="1.0" height="15.0" fill="rgb(247,29,31)" rx="2" ry="2" />
<text  x="1111.47" y="175.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (2 samples, 0.18%)</title><rect x="62.6" y="277" width="2.1" height="15.0" fill="rgb(216,13,48)" rx="2" ry="2" />
<text  x="65.56" y="287.5" ></text>
</g>
<g >
<title>signal_wake_up_state (1 samples, 0.09%)</title><rect x="1150.3" y="245" width="1.1" height="15.0" fill="rgb(207,20,10)" rx="2" ry="2" />
<text  x="1153.31" y="255.5" ></text>
</g>
<g >
<title>__syscall_return_slowpath (6 samples, 0.55%)</title><rect x="1089.2" y="277" width="6.4" height="15.0" fill="rgb(254,85,2)" rx="2" ry="2" />
<text  x="1092.16" y="287.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (5 samples, 0.45%)</title><rect x="1117.1" y="325" width="5.3" height="15.0" fill="rgb(207,26,17)" rx="2" ry="2" />
<text  x="1120.05" y="335.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (6 samples, 0.55%)</title><rect x="1089.2" y="261" width="6.4" height="15.0" fill="rgb(241,207,27)" rx="2" ry="2" />
<text  x="1092.16" y="271.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.09%)</title><rect x="1150.3" y="181" width="1.1" height="15.0" fill="rgb(211,11,14)" rx="2" ry="2" />
<text  x="1153.31" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="906.8" y="309" width="1.1" height="15.0" fill="rgb(237,197,54)" rx="2" ry="2" />
<text  x="909.80" y="319.5" ></text>
</g>
<g >
<title>__iommu_dma_unmap (1 samples, 0.09%)</title><rect x="240.6" y="37" width="1.1" height="15.0" fill="rgb(216,77,44)" rx="2" ry="2" />
<text  x="243.64" y="47.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.09%)</title><rect x="1109.5" y="325" width="1.1" height="15.0" fill="rgb(224,76,21)" rx="2" ry="2" />
<text  x="1112.55" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.09%)</title><rect x="1108.5" y="293" width="1.0" height="15.0" fill="rgb(224,169,47)" rx="2" ry="2" />
<text  x="1111.47" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.27%)</title><rect x="1163.2" y="277" width="3.2" height="15.0" fill="rgb(235,165,36)" rx="2" ry="2" />
<text  x="1166.18" y="287.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.09%)</title><rect x="240.6" y="197" width="1.1" height="15.0" fill="rgb(217,197,46)" rx="2" ry="2" />
<text  x="243.64" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3 samples, 0.27%)</title><rect x="1163.2" y="325" width="3.2" height="15.0" fill="rgb(252,133,29)" rx="2" ry="2" />
<text  x="1166.18" y="335.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (6 samples, 0.55%)</title><rect x="936.8" y="149" width="6.5" height="15.0" fill="rgb(224,223,3)" rx="2" ry="2" />
<text  x="939.84" y="159.5" ></text>
</g>
<g >
<title>mmap64 (1 samples, 0.09%)</title><rect x="1161.0" y="341" width="1.1" height="15.0" fill="rgb(247,149,36)" rx="2" ry="2" />
<text  x="1164.04" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="1151.4" y="277" width="1.1" height="15.0" fill="rgb(249,120,11)" rx="2" ry="2" />
<text  x="1154.38" y="287.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.09%)</title><rect x="240.6" y="261" width="1.1" height="15.0" fill="rgb(254,8,9)" rx="2" ry="2" />
<text  x="243.64" y="271.5" ></text>
</g>
<g >
<title>mm_release (1 samples, 0.09%)</title><rect x="910.0" y="165" width="1.1" height="15.0" fill="rgb(241,44,19)" rx="2" ry="2" />
<text  x="913.02" y="175.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.09%)</title><rect x="1142.8" y="213" width="1.1" height="15.0" fill="rgb(211,177,9)" rx="2" ry="2" />
<text  x="1145.80" y="223.5" ></text>
</g>
<g >
<title>Utility::InitializeArray (55 samples, 5.00%)</title><rect x="10.0" y="309" width="59.0" height="15.0" fill="rgb(224,176,47)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >Utilit..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.09%)</title><rect x="906.8" y="261" width="1.1" height="15.0" fill="rgb(223,14,22)" rx="2" ry="2" />
<text  x="909.80" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_enable_all (9 samples, 0.82%)</title><rect x="1078.4" y="213" width="9.7" height="15.0" fill="rgb(235,8,50)" rx="2" ry="2" />
<text  x="1081.44" y="223.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.09%)</title><rect x="1153.5" y="277" width="1.1" height="15.0" fill="rgb(207,199,20)" rx="2" ry="2" />
<text  x="1156.53" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.09%)</title><rect x="1150.3" y="197" width="1.1" height="15.0" fill="rgb(248,55,11)" rx="2" ry="2" />
<text  x="1153.31" y="207.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.55%)</title><rect x="936.8" y="181" width="6.5" height="15.0" fill="rgb(232,128,5)" rx="2" ry="2" />
<text  x="939.84" y="191.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.09%)</title><rect x="910.0" y="197" width="1.1" height="15.0" fill="rgb(227,77,49)" rx="2" ry="2" />
<text  x="913.02" y="207.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.09%)</title><rect x="240.6" y="165" width="1.1" height="15.0" fill="rgb(254,216,35)" rx="2" ry="2" />
<text  x="243.64" y="175.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.09%)</title><rect x="1088.1" y="213" width="1.1" height="15.0" fill="rgb(244,119,19)" rx="2" ry="2" />
<text  x="1091.09" y="223.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.09%)</title><rect x="240.6" y="213" width="1.1" height="15.0" fill="rgb(232,69,16)" rx="2" ry="2" />
<text  x="243.64" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.09%)</title><rect x="1150.3" y="293" width="1.1" height="15.0" fill="rgb(223,189,35)" rx="2" ry="2" />
<text  x="1153.31" y="303.5" ></text>
</g>
<g >
<title>GOMP_parallel (23 samples, 2.09%)</title><rect x="946.5" y="309" width="24.7" height="15.0" fill="rgb(241,224,32)" rx="2" ry="2" />
<text  x="949.49" y="319.5" >G..</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.09%)</title><rect x="906.8" y="213" width="1.1" height="15.0" fill="rgb(232,140,8)" rx="2" ry="2" />
<text  x="909.80" y="223.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.09%)</title><rect x="987.3" y="101" width="1.0" height="15.0" fill="rgb(218,107,52)" rx="2" ry="2" />
<text  x="990.25" y="111.5" ></text>
</g>
<g >
<title>__prepare_exit_to_usermode (1 samples, 0.09%)</title><rect x="1153.5" y="293" width="1.1" height="15.0" fill="rgb(248,41,18)" rx="2" ry="2" />
<text  x="1156.53" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.09%)</title><rect x="240.6" y="325" width="1.1" height="15.0" fill="rgb(227,195,54)" rx="2" ry="2" />
<text  x="243.64" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1162.1" y="309" width="1.1" height="15.0" fill="rgb(253,1,12)" rx="2" ry="2" />
<text  x="1165.11" y="319.5" ></text>
</g>
<g >
<title>recalc_sigpending_tsk (1 samples, 0.09%)</title><rect x="1054.8" y="245" width="1.1" height="15.0" fill="rgb(214,225,29)" rx="2" ry="2" />
<text  x="1057.84" y="255.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.09%)</title><rect x="1153.5" y="213" width="1.1" height="15.0" fill="rgb(234,151,18)" rx="2" ry="2" />
<text  x="1156.53" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.09%)</title><rect x="240.6" y="245" width="1.1" height="15.0" fill="rgb(234,207,47)" rx="2" ry="2" />
<text  x="243.64" y="255.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.27%)</title><rect x="1110.6" y="325" width="3.2" height="15.0" fill="rgb(252,55,39)" rx="2" ry="2" />
<text  x="1113.62" y="335.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.09%)</title><rect x="1151.4" y="229" width="1.1" height="15.0" fill="rgb(218,95,47)" rx="2" ry="2" />
<text  x="1154.38" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1108.5" y="309" width="1.0" height="15.0" fill="rgb(225,154,16)" rx="2" ry="2" />
<text  x="1111.47" y="319.5" ></text>
</g>
<g >
<title>Parallel::OmpSolve (55 samples, 5.00%)</title><rect x="10.0" y="325" width="59.0" height="15.0" fill="rgb(250,145,38)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >Parall..</text>
</g>
<g >
<title>__get_vm_area_node (1 samples, 0.09%)</title><rect x="989.4" y="181" width="1.1" height="15.0" fill="rgb(229,178,1)" rx="2" ry="2" />
<text  x="992.40" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.09%)</title><rect x="1151.4" y="309" width="1.1" height="15.0" fill="rgb(234,178,46)" rx="2" ry="2" />
<text  x="1154.38" y="319.5" ></text>
</g>
<g >
<title>psi_task_switch (1 samples, 0.09%)</title><rect x="988.3" y="101" width="1.1" height="15.0" fill="rgb(238,134,31)" rx="2" ry="2" />
<text  x="991.33" y="111.5" ></text>
</g>
<g >
<title>schedule_tail (66 samples, 6.00%)</title><rect x="1018.4" y="293" width="70.8" height="15.0" fill="rgb(232,176,49)" rx="2" ry="2" />
<text  x="1021.36" y="303.5" >schedule..</text>
</g>
<g >
<title>get_signal (2 samples, 0.18%)</title><rect x="908.9" y="229" width="2.2" height="15.0" fill="rgb(223,168,15)" rx="2" ry="2" />
<text  x="911.95" y="239.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (3 samples, 0.27%)</title><rect x="41.1" y="261" width="3.2" height="15.0" fill="rgb(238,56,37)" rx="2" ry="2" />
<text  x="44.11" y="271.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.27%)</title><rect x="986.2" y="229" width="3.2" height="15.0" fill="rgb(238,113,20)" rx="2" ry="2" />
<text  x="989.18" y="239.5" ></text>
</g>
<g >
<title>nvme_irq (1 samples, 0.09%)</title><rect x="240.6" y="133" width="1.1" height="15.0" fill="rgb(239,120,35)" rx="2" ry="2" />
<text  x="243.64" y="143.5" ></text>
</g>
<g >
<title>tty_write (3 samples, 0.27%)</title><rect x="986.2" y="213" width="3.2" height="15.0" fill="rgb(239,184,1)" rx="2" ry="2" />
<text  x="989.18" y="223.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.09%)</title><rect x="1088.1" y="245" width="1.1" height="15.0" fill="rgb(218,176,42)" rx="2" ry="2" />
<text  x="1091.09" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9 samples, 0.82%)</title><rect x="1078.4" y="229" width="9.7" height="15.0" fill="rgb(228,138,41)" rx="2" ry="2" />
<text  x="1081.44" y="239.5" ></text>
</g>
<g >
<title>get_signal (1 samples, 0.09%)</title><rect x="1153.5" y="261" width="1.1" height="15.0" fill="rgb(236,177,11)" rx="2" ry="2" />
<text  x="1156.53" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.09%)</title><rect x="1151.4" y="325" width="1.1" height="15.0" fill="rgb(242,99,48)" rx="2" ry="2" />
<text  x="1154.38" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.09%)</title><rect x="1142.8" y="261" width="1.1" height="15.0" fill="rgb(224,43,30)" rx="2" ry="2" />
<text  x="1145.80" y="271.5" ></text>
</g>
<g >
<title>extract_crng (1 samples, 0.09%)</title><rect x="1108.5" y="181" width="1.0" height="15.0" fill="rgb(242,202,20)" rx="2" ry="2" />
<text  x="1111.47" y="191.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.27%)</title><rect x="30.4" y="261" width="3.2" height="15.0" fill="rgb(220,45,36)" rx="2" ry="2" />
<text  x="33.38" y="271.5" ></text>
</g>
<g >
<title>finish_task_switch (31 samples, 2.82%)</title><rect x="1055.9" y="277" width="33.3" height="15.0" fill="rgb(250,104,25)" rx="2" ry="2" />
<text  x="1058.91" y="287.5" >fi..</text>
</g>
<g >
<title>schedule (12 samples, 1.09%)</title><rect x="930.4" y="213" width="12.9" height="15.0" fill="rgb(229,151,40)" rx="2" ry="2" />
<text  x="933.40" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.09%)</title><rect x="69.0" y="277" width="1.1" height="15.0" fill="rgb(207,90,7)" rx="2" ry="2" />
<text  x="72.00" y="287.5" ></text>
</g>
<g >
<title>std::__convert_to_v&lt;double&gt; (3 samples, 0.27%)</title><rect x="1163.2" y="341" width="3.2" height="15.0" fill="rgb(223,164,19)" rx="2" ry="2" />
<text  x="1166.18" y="351.5" ></text>
</g>
<g >
<title>do_signal (2 samples, 0.18%)</title><rect x="908.9" y="245" width="2.2" height="15.0" fill="rgb(231,97,49)" rx="2" ry="2" />
<text  x="911.95" y="255.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.09%)</title><rect x="1142.8" y="165" width="1.1" height="15.0" fill="rgb(235,158,5)" rx="2" ry="2" />
<text  x="1145.80" y="175.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.09%)</title><rect x="240.6" y="277" width="1.1" height="15.0" fill="rgb(228,44,19)" rx="2" ry="2" />
<text  x="243.64" y="287.5" ></text>
</g>
<g >
<title>round_and_return (3 samples, 0.27%)</title><rect x="1113.8" y="325" width="3.3" height="15.0" fill="rgb(208,85,23)" rx="2" ry="2" />
<text  x="1116.84" y="335.5" ></text>
</g>
<g >
<title>str_to_mpn.isra.0 (3 samples, 0.27%)</title><rect x="1131.0" y="325" width="3.2" height="15.0" fill="rgb(241,116,5)" rx="2" ry="2" />
<text  x="1134.00" y="335.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.45%)</title><rect x="1097.7" y="325" width="5.4" height="15.0" fill="rgb(253,24,7)" rx="2" ry="2" />
<text  x="1100.75" y="335.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (7 samples, 0.64%)</title><rect x="33.6" y="261" width="7.5" height="15.0" fill="rgb(216,196,49)" rx="2" ry="2" />
<text  x="36.60" y="271.5" ></text>
</g>
<g >
<title>copy_process (1 samples, 0.09%)</title><rect x="989.4" y="229" width="1.1" height="15.0" fill="rgb(254,195,34)" rx="2" ry="2" />
<text  x="992.40" y="239.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.09%)</title><rect x="1142.8" y="229" width="1.1" height="15.0" fill="rgb(236,47,42)" rx="2" ry="2" />
<text  x="1145.80" y="239.5" ></text>
</g>
<g >
<title>iommu_dma_unmap_page (1 samples, 0.09%)</title><rect x="240.6" y="53" width="1.1" height="15.0" fill="rgb(245,165,40)" rx="2" ry="2" />
<text  x="243.64" y="63.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.09%)</title><rect x="1088.1" y="261" width="1.1" height="15.0" fill="rgb(221,166,8)" rx="2" ry="2" />
<text  x="1091.09" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (1 samples, 0.09%)</title><rect x="907.9" y="309" width="1.0" height="15.0" fill="rgb(209,37,7)" rx="2" ry="2" />
<text  x="910.87" y="319.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.09%)</title><rect x="1153.5" y="117" width="1.1" height="15.0" fill="rgb(222,119,18)" rx="2" ry="2" />
<text  x="1156.53" y="127.5" ></text>
</g>
<g >
<title>wake_up_state (1 samples, 0.09%)</title><rect x="1150.3" y="229" width="1.1" height="15.0" fill="rgb(223,215,38)" rx="2" ry="2" />
<text  x="1153.31" y="239.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.09%)</title><rect x="906.8" y="229" width="1.1" height="15.0" fill="rgb(240,4,2)" rx="2" ry="2" />
<text  x="909.80" y="239.5" ></text>
</g>
<g >
<title>sysmalloc (1 samples, 0.09%)</title><rect x="1188.9" y="341" width="1.1" height="15.0" fill="rgb(208,216,42)" rx="2" ry="2" />
<text  x="1191.93" y="351.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.09%)</title><rect x="69.0" y="245" width="1.1" height="15.0" fill="rgb(209,190,15)" rx="2" ry="2" />
<text  x="72.00" y="255.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.09%)</title><rect x="990.5" y="197" width="1.0" height="15.0" fill="rgb(244,191,32)" rx="2" ry="2" />
<text  x="993.47" y="207.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.09%)</title><rect x="240.6" y="149" width="1.1" height="15.0" fill="rgb(227,51,35)" rx="2" ry="2" />
<text  x="243.64" y="159.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (10 samples, 0.91%)</title><rect x="960.4" y="293" width="10.8" height="15.0" fill="rgb(248,190,4)" rx="2" ry="2" />
<text  x="963.44" y="303.5" ></text>
</g>
<g >
<title>do_futex (30 samples, 2.73%)</title><rect x="911.1" y="261" width="32.2" height="15.0" fill="rgb(210,222,31)" rx="2" ry="2" />
<text  x="914.09" y="271.5" >do..</text>
</g>
<g >
<title>__GI_____strtod_l_internal (13 samples, 1.18%)</title><rect x="971.2" y="325" width="13.9" height="15.0" fill="rgb(221,53,52)" rx="2" ry="2" />
<text  x="974.16" y="335.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.09%)</title><rect x="240.6" y="229" width="1.1" height="15.0" fill="rgb(254,97,4)" rx="2" ry="2" />
<text  x="243.64" y="239.5" ></text>
</g>
<g >
<title>exit_mm_release (1 samples, 0.09%)</title><rect x="910.0" y="181" width="1.1" height="15.0" fill="rgb(254,160,34)" rx="2" ry="2" />
<text  x="913.02" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (3 samples, 0.27%)</title><rect x="1163.2" y="309" width="3.2" height="15.0" fill="rgb(215,136,50)" rx="2" ry="2" />
<text  x="1166.18" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="1161.0" y="309" width="1.1" height="15.0" fill="rgb(219,43,48)" rx="2" ry="2" />
<text  x="1164.04" y="319.5" ></text>
</g>
<g >
<title>__mpn_lshift (1 samples, 0.09%)</title><rect x="1096.7" y="325" width="1.0" height="15.0" fill="rgb(238,179,2)" rx="2" ry="2" />
<text  x="1099.67" y="335.5" ></text>
</g>
</g>
</svg>
